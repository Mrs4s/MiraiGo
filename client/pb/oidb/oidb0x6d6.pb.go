// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: oidb0x6d6.proto

package oidb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type DeleteFileReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode      int64  `protobuf:"varint,1,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	AppId          int32  `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	BusId          int32  `protobuf:"varint,3,opt,name=busId,proto3" json:"busId,omitempty"`
	ParentFolderId string `protobuf:"bytes,4,opt,name=parentFolderId,proto3" json:"parentFolderId,omitempty"`
	FileId         string `protobuf:"bytes,5,opt,name=fileId,proto3" json:"fileId,omitempty"`
}

func (x *DeleteFileReqBody) Reset() {
	*x = DeleteFileReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileReqBody) ProtoMessage() {}

func (x *DeleteFileReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileReqBody.ProtoReflect.Descriptor instead.
func (*DeleteFileReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{0}
}

func (x *DeleteFileReqBody) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *DeleteFileReqBody) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *DeleteFileReqBody) GetBusId() int32 {
	if x != nil {
		return x.BusId
	}
	return 0
}

func (x *DeleteFileReqBody) GetParentFolderId() string {
	if x != nil {
		return x.ParentFolderId
	}
	return ""
}

func (x *DeleteFileReqBody) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

type DeleteFileRspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode       int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg        string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	ClientWording string `protobuf:"bytes,3,opt,name=clientWording,proto3" json:"clientWording,omitempty"`
}

func (x *DeleteFileRspBody) Reset() {
	*x = DeleteFileRspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteFileRspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRspBody) ProtoMessage() {}

func (x *DeleteFileRspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRspBody.ProtoReflect.Descriptor instead.
func (*DeleteFileRspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{1}
}

func (x *DeleteFileRspBody) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *DeleteFileRspBody) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *DeleteFileRspBody) GetClientWording() string {
	if x != nil {
		return x.ClientWording
	}
	return ""
}

type DownloadFileReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode        int64  `protobuf:"varint,1,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	AppId            int32  `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	BusId            int32  `protobuf:"varint,3,opt,name=busId,proto3" json:"busId,omitempty"`
	FileId           string `protobuf:"bytes,4,opt,name=fileId,proto3" json:"fileId,omitempty"`
	BoolThumbnailReq bool   `protobuf:"varint,5,opt,name=boolThumbnailReq,proto3" json:"boolThumbnailReq,omitempty"`
	UrlType          int32  `protobuf:"varint,6,opt,name=urlType,proto3" json:"urlType,omitempty"`
	BoolPreviewReq   bool   `protobuf:"varint,7,opt,name=boolPreviewReq,proto3" json:"boolPreviewReq,omitempty"`
}

func (x *DownloadFileReqBody) Reset() {
	*x = DownloadFileReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileReqBody) ProtoMessage() {}

func (x *DownloadFileReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileReqBody.ProtoReflect.Descriptor instead.
func (*DownloadFileReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{2}
}

func (x *DownloadFileReqBody) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *DownloadFileReqBody) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *DownloadFileReqBody) GetBusId() int32 {
	if x != nil {
		return x.BusId
	}
	return 0
}

func (x *DownloadFileReqBody) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *DownloadFileReqBody) GetBoolThumbnailReq() bool {
	if x != nil {
		return x.BoolThumbnailReq
	}
	return false
}

func (x *DownloadFileReqBody) GetUrlType() int32 {
	if x != nil {
		return x.UrlType
	}
	return 0
}

func (x *DownloadFileReqBody) GetBoolPreviewReq() bool {
	if x != nil {
		return x.BoolPreviewReq
	}
	return false
}

type DownloadFileRspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode       int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg        string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	ClientWording string `protobuf:"bytes,3,opt,name=clientWording,proto3" json:"clientWording,omitempty"`
	DownloadIp    string `protobuf:"bytes,4,opt,name=downloadIp,proto3" json:"downloadIp,omitempty"`
	DownloadDns   []byte `protobuf:"bytes,5,opt,name=downloadDns,proto3" json:"downloadDns,omitempty"`
	DownloadUrl   []byte `protobuf:"bytes,6,opt,name=downloadUrl,proto3" json:"downloadUrl,omitempty"`
	Sha           []byte `protobuf:"bytes,7,opt,name=sha,proto3" json:"sha,omitempty"`
	Sha3          []byte `protobuf:"bytes,8,opt,name=sha3,proto3" json:"sha3,omitempty"`
	Md5           []byte `protobuf:"bytes,9,opt,name=md5,proto3" json:"md5,omitempty"`
	CookieVal     []byte `protobuf:"bytes,10,opt,name=cookieVal,proto3" json:"cookieVal,omitempty"`
	SaveFileName  string `protobuf:"bytes,11,opt,name=saveFileName,proto3" json:"saveFileName,omitempty"`
	PreviewPort   int32  `protobuf:"varint,12,opt,name=previewPort,proto3" json:"previewPort,omitempty"`
}

func (x *DownloadFileRspBody) Reset() {
	*x = DownloadFileRspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DownloadFileRspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRspBody) ProtoMessage() {}

func (x *DownloadFileRspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRspBody.ProtoReflect.Descriptor instead.
func (*DownloadFileRspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{3}
}

func (x *DownloadFileRspBody) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *DownloadFileRspBody) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *DownloadFileRspBody) GetClientWording() string {
	if x != nil {
		return x.ClientWording
	}
	return ""
}

func (x *DownloadFileRspBody) GetDownloadIp() string {
	if x != nil {
		return x.DownloadIp
	}
	return ""
}

func (x *DownloadFileRspBody) GetDownloadDns() []byte {
	if x != nil {
		return x.DownloadDns
	}
	return nil
}

func (x *DownloadFileRspBody) GetDownloadUrl() []byte {
	if x != nil {
		return x.DownloadUrl
	}
	return nil
}

func (x *DownloadFileRspBody) GetSha() []byte {
	if x != nil {
		return x.Sha
	}
	return nil
}

func (x *DownloadFileRspBody) GetSha3() []byte {
	if x != nil {
		return x.Sha3
	}
	return nil
}

func (x *DownloadFileRspBody) GetMd5() []byte {
	if x != nil {
		return x.Md5
	}
	return nil
}

func (x *DownloadFileRspBody) GetCookieVal() []byte {
	if x != nil {
		return x.CookieVal
	}
	return nil
}

func (x *DownloadFileRspBody) GetSaveFileName() string {
	if x != nil {
		return x.SaveFileName
	}
	return ""
}

func (x *DownloadFileRspBody) GetPreviewPort() int32 {
	if x != nil {
		return x.PreviewPort
	}
	return 0
}

type MoveFileReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode      int64  `protobuf:"varint,1,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	AppId          int32  `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	BusId          int32  `protobuf:"varint,3,opt,name=busId,proto3" json:"busId,omitempty"`
	FileId         string `protobuf:"bytes,4,opt,name=fileId,proto3" json:"fileId,omitempty"`
	ParentFolderId string `protobuf:"bytes,5,opt,name=parentFolderId,proto3" json:"parentFolderId,omitempty"`
	DestFolderId   string `protobuf:"bytes,6,opt,name=destFolderId,proto3" json:"destFolderId,omitempty"`
}

func (x *MoveFileReqBody) Reset() {
	*x = MoveFileReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveFileReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileReqBody) ProtoMessage() {}

func (x *MoveFileReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileReqBody.ProtoReflect.Descriptor instead.
func (*MoveFileReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{4}
}

func (x *MoveFileReqBody) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *MoveFileReqBody) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *MoveFileReqBody) GetBusId() int32 {
	if x != nil {
		return x.BusId
	}
	return 0
}

func (x *MoveFileReqBody) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *MoveFileReqBody) GetParentFolderId() string {
	if x != nil {
		return x.ParentFolderId
	}
	return ""
}

func (x *MoveFileReqBody) GetDestFolderId() string {
	if x != nil {
		return x.DestFolderId
	}
	return ""
}

type MoveFileRspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode        int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg         string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	ClientWording  string `protobuf:"bytes,3,opt,name=clientWording,proto3" json:"clientWording,omitempty"`
	ParentFolderId string `protobuf:"bytes,4,opt,name=parentFolderId,proto3" json:"parentFolderId,omitempty"`
}

func (x *MoveFileRspBody) Reset() {
	*x = MoveFileRspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoveFileRspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoveFileRspBody) ProtoMessage() {}

func (x *MoveFileRspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoveFileRspBody.ProtoReflect.Descriptor instead.
func (*MoveFileRspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{5}
}

func (x *MoveFileRspBody) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *MoveFileRspBody) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *MoveFileRspBody) GetClientWording() string {
	if x != nil {
		return x.ClientWording
	}
	return ""
}

func (x *MoveFileRspBody) GetParentFolderId() string {
	if x != nil {
		return x.ParentFolderId
	}
	return ""
}

type RenameFileReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode      int64  `protobuf:"varint,1,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	AppId          int32  `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	BusId          int32  `protobuf:"varint,3,opt,name=busId,proto3" json:"busId,omitempty"`
	FileId         string `protobuf:"bytes,4,opt,name=fileId,proto3" json:"fileId,omitempty"`
	ParentFolderId string `protobuf:"bytes,5,opt,name=parentFolderId,proto3" json:"parentFolderId,omitempty"`
	NewFileName    string `protobuf:"bytes,6,opt,name=newFileName,proto3" json:"newFileName,omitempty"`
}

func (x *RenameFileReqBody) Reset() {
	*x = RenameFileReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameFileReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameFileReqBody) ProtoMessage() {}

func (x *RenameFileReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameFileReqBody.ProtoReflect.Descriptor instead.
func (*RenameFileReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{6}
}

func (x *RenameFileReqBody) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *RenameFileReqBody) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *RenameFileReqBody) GetBusId() int32 {
	if x != nil {
		return x.BusId
	}
	return 0
}

func (x *RenameFileReqBody) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *RenameFileReqBody) GetParentFolderId() string {
	if x != nil {
		return x.ParentFolderId
	}
	return ""
}

func (x *RenameFileReqBody) GetNewFileName() string {
	if x != nil {
		return x.NewFileName
	}
	return ""
}

type RenameFileRspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode       int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg        string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	ClientWording string `protobuf:"bytes,3,opt,name=clientWording,proto3" json:"clientWording,omitempty"`
}

func (x *RenameFileRspBody) Reset() {
	*x = RenameFileRspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RenameFileRspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RenameFileRspBody) ProtoMessage() {}

func (x *RenameFileRspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RenameFileRspBody.ProtoReflect.Descriptor instead.
func (*RenameFileRspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{7}
}

func (x *RenameFileRspBody) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *RenameFileRspBody) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *RenameFileRspBody) GetClientWording() string {
	if x != nil {
		return x.ClientWording
	}
	return ""
}

type D6D6ReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadFileReq   *UploadFileReqBody   `protobuf:"bytes,1,opt,name=uploadFileReq,proto3" json:"uploadFileReq,omitempty"`
	ResendFileReq   *ResendReqBody       `protobuf:"bytes,2,opt,name=resendFileReq,proto3" json:"resendFileReq,omitempty"`
	DownloadFileReq *DownloadFileReqBody `protobuf:"bytes,3,opt,name=downloadFileReq,proto3" json:"downloadFileReq,omitempty"`
	DeleteFileReq   *DeleteFileReqBody   `protobuf:"bytes,4,opt,name=deleteFileReq,proto3" json:"deleteFileReq,omitempty"`
	RenameFileReq   *RenameFileReqBody   `protobuf:"bytes,5,opt,name=renameFileReq,proto3" json:"renameFileReq,omitempty"`
	MoveFileReq     *MoveFileReqBody     `protobuf:"bytes,6,opt,name=moveFileReq,proto3" json:"moveFileReq,omitempty"`
}

func (x *D6D6ReqBody) Reset() {
	*x = D6D6ReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *D6D6ReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*D6D6ReqBody) ProtoMessage() {}

func (x *D6D6ReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use D6D6ReqBody.ProtoReflect.Descriptor instead.
func (*D6D6ReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{8}
}

func (x *D6D6ReqBody) GetUploadFileReq() *UploadFileReqBody {
	if x != nil {
		return x.UploadFileReq
	}
	return nil
}

func (x *D6D6ReqBody) GetResendFileReq() *ResendReqBody {
	if x != nil {
		return x.ResendFileReq
	}
	return nil
}

func (x *D6D6ReqBody) GetDownloadFileReq() *DownloadFileReqBody {
	if x != nil {
		return x.DownloadFileReq
	}
	return nil
}

func (x *D6D6ReqBody) GetDeleteFileReq() *DeleteFileReqBody {
	if x != nil {
		return x.DeleteFileReq
	}
	return nil
}

func (x *D6D6ReqBody) GetRenameFileReq() *RenameFileReqBody {
	if x != nil {
		return x.RenameFileReq
	}
	return nil
}

func (x *D6D6ReqBody) GetMoveFileReq() *MoveFileReqBody {
	if x != nil {
		return x.MoveFileReq
	}
	return nil
}

type ResendReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode int64  `protobuf:"varint,1,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	AppId     int32  `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	BusId     int32  `protobuf:"varint,3,opt,name=busId,proto3" json:"busId,omitempty"`
	FileId    string `protobuf:"bytes,4,opt,name=fileId,proto3" json:"fileId,omitempty"`
	Sha       []byte `protobuf:"bytes,5,opt,name=sha,proto3" json:"sha,omitempty"`
}

func (x *ResendReqBody) Reset() {
	*x = ResendReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendReqBody) ProtoMessage() {}

func (x *ResendReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendReqBody.ProtoReflect.Descriptor instead.
func (*ResendReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{9}
}

func (x *ResendReqBody) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *ResendReqBody) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *ResendReqBody) GetBusId() int32 {
	if x != nil {
		return x.BusId
	}
	return 0
}

func (x *ResendReqBody) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ResendReqBody) GetSha() []byte {
	if x != nil {
		return x.Sha
	}
	return nil
}

type ResendRspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode       int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg        string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	ClientWording string `protobuf:"bytes,3,opt,name=clientWording,proto3" json:"clientWording,omitempty"`
	UploadIp      string `protobuf:"bytes,4,opt,name=uploadIp,proto3" json:"uploadIp,omitempty"`
	FileKey       []byte `protobuf:"bytes,5,opt,name=fileKey,proto3" json:"fileKey,omitempty"`
	CheckKey      []byte `protobuf:"bytes,6,opt,name=checkKey,proto3" json:"checkKey,omitempty"`
}

func (x *ResendRspBody) Reset() {
	*x = ResendRspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResendRspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResendRspBody) ProtoMessage() {}

func (x *ResendRspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResendRspBody.ProtoReflect.Descriptor instead.
func (*ResendRspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{10}
}

func (x *ResendRspBody) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *ResendRspBody) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *ResendRspBody) GetClientWording() string {
	if x != nil {
		return x.ClientWording
	}
	return ""
}

func (x *ResendRspBody) GetUploadIp() string {
	if x != nil {
		return x.UploadIp
	}
	return ""
}

func (x *ResendRspBody) GetFileKey() []byte {
	if x != nil {
		return x.FileKey
	}
	return nil
}

func (x *ResendRspBody) GetCheckKey() []byte {
	if x != nil {
		return x.CheckKey
	}
	return nil
}

type D6D6RspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadFileRsp   *UploadFileRspBody   `protobuf:"bytes,1,opt,name=uploadFileRsp,proto3" json:"uploadFileRsp,omitempty"`
	ResendFileRsp   *ResendRspBody       `protobuf:"bytes,2,opt,name=resendFileRsp,proto3" json:"resendFileRsp,omitempty"`
	DownloadFileRsp *DownloadFileRspBody `protobuf:"bytes,3,opt,name=downloadFileRsp,proto3" json:"downloadFileRsp,omitempty"`
	DeleteFileRsp   *DeleteFileRspBody   `protobuf:"bytes,4,opt,name=deleteFileRsp,proto3" json:"deleteFileRsp,omitempty"`
	RenameFileRsp   *RenameFileRspBody   `protobuf:"bytes,5,opt,name=renameFileRsp,proto3" json:"renameFileRsp,omitempty"`
	MoveFileRsp     *MoveFileRspBody     `protobuf:"bytes,6,opt,name=moveFileRsp,proto3" json:"moveFileRsp,omitempty"`
}

func (x *D6D6RspBody) Reset() {
	*x = D6D6RspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *D6D6RspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*D6D6RspBody) ProtoMessage() {}

func (x *D6D6RspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use D6D6RspBody.ProtoReflect.Descriptor instead.
func (*D6D6RspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{11}
}

func (x *D6D6RspBody) GetUploadFileRsp() *UploadFileRspBody {
	if x != nil {
		return x.UploadFileRsp
	}
	return nil
}

func (x *D6D6RspBody) GetResendFileRsp() *ResendRspBody {
	if x != nil {
		return x.ResendFileRsp
	}
	return nil
}

func (x *D6D6RspBody) GetDownloadFileRsp() *DownloadFileRspBody {
	if x != nil {
		return x.DownloadFileRsp
	}
	return nil
}

func (x *D6D6RspBody) GetDeleteFileRsp() *DeleteFileRspBody {
	if x != nil {
		return x.DeleteFileRsp
	}
	return nil
}

func (x *D6D6RspBody) GetRenameFileRsp() *RenameFileRspBody {
	if x != nil {
		return x.RenameFileRsp
	}
	return nil
}

func (x *D6D6RspBody) GetMoveFileRsp() *MoveFileRspBody {
	if x != nil {
		return x.MoveFileRsp
	}
	return nil
}

type UploadFileReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode      int64  `protobuf:"varint,1,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	AppId          int32  `protobuf:"varint,2,opt,name=appId,proto3" json:"appId,omitempty"`
	BusId          int32  `protobuf:"varint,3,opt,name=busId,proto3" json:"busId,omitempty"`
	Entrance       int32  `protobuf:"varint,4,opt,name=entrance,proto3" json:"entrance,omitempty"`
	ParentFolderId string `protobuf:"bytes,5,opt,name=parentFolderId,proto3" json:"parentFolderId,omitempty"`
	FileName       string `protobuf:"bytes,6,opt,name=fileName,proto3" json:"fileName,omitempty"`
	LocalPath      string `protobuf:"bytes,7,opt,name=localPath,proto3" json:"localPath,omitempty"`
	Int64FileSize  int64  `protobuf:"varint,8,opt,name=int64FileSize,proto3" json:"int64FileSize,omitempty"`
	Sha            []byte `protobuf:"bytes,9,opt,name=sha,proto3" json:"sha,omitempty"`
	Sha3           []byte `protobuf:"bytes,10,opt,name=sha3,proto3" json:"sha3,omitempty"`
	Md5            []byte `protobuf:"bytes,11,opt,name=md5,proto3" json:"md5,omitempty"`
}

func (x *UploadFileReqBody) Reset() {
	*x = UploadFileReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileReqBody) ProtoMessage() {}

func (x *UploadFileReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileReqBody.ProtoReflect.Descriptor instead.
func (*UploadFileReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{12}
}

func (x *UploadFileReqBody) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *UploadFileReqBody) GetAppId() int32 {
	if x != nil {
		return x.AppId
	}
	return 0
}

func (x *UploadFileReqBody) GetBusId() int32 {
	if x != nil {
		return x.BusId
	}
	return 0
}

func (x *UploadFileReqBody) GetEntrance() int32 {
	if x != nil {
		return x.Entrance
	}
	return 0
}

func (x *UploadFileReqBody) GetParentFolderId() string {
	if x != nil {
		return x.ParentFolderId
	}
	return ""
}

func (x *UploadFileReqBody) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadFileReqBody) GetLocalPath() string {
	if x != nil {
		return x.LocalPath
	}
	return ""
}

func (x *UploadFileReqBody) GetInt64FileSize() int64 {
	if x != nil {
		return x.Int64FileSize
	}
	return 0
}

func (x *UploadFileReqBody) GetSha() []byte {
	if x != nil {
		return x.Sha
	}
	return nil
}

func (x *UploadFileReqBody) GetSha3() []byte {
	if x != nil {
		return x.Sha3
	}
	return nil
}

func (x *UploadFileReqBody) GetMd5() []byte {
	if x != nil {
		return x.Md5
	}
	return nil
}

type UploadFileRspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode       int32  `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg        string `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	ClientWording string `protobuf:"bytes,3,opt,name=clientWording,proto3" json:"clientWording,omitempty"`
	UploadIp      string `protobuf:"bytes,4,opt,name=uploadIp,proto3" json:"uploadIp,omitempty"`
	ServerDns     string `protobuf:"bytes,5,opt,name=serverDns,proto3" json:"serverDns,omitempty"`
	BusId         int32  `protobuf:"varint,6,opt,name=busId,proto3" json:"busId,omitempty"`
	FileId        string `protobuf:"bytes,7,opt,name=fileId,proto3" json:"fileId,omitempty"`
	FileKey       []byte `protobuf:"bytes,8,opt,name=fileKey,proto3" json:"fileKey,omitempty"`
	CheckKey      []byte `protobuf:"bytes,9,opt,name=checkKey,proto3" json:"checkKey,omitempty"`
	BoolFileExist bool   `protobuf:"varint,10,opt,name=boolFileExist,proto3" json:"boolFileExist,omitempty"`
}

func (x *UploadFileRspBody) Reset() {
	*x = UploadFileRspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d6_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileRspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRspBody) ProtoMessage() {}

func (x *UploadFileRspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d6_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRspBody.ProtoReflect.Descriptor instead.
func (*UploadFileRspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d6_proto_rawDescGZIP(), []int{13}
}

func (x *UploadFileRspBody) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *UploadFileRspBody) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *UploadFileRspBody) GetClientWording() string {
	if x != nil {
		return x.ClientWording
	}
	return ""
}

func (x *UploadFileRspBody) GetUploadIp() string {
	if x != nil {
		return x.UploadIp
	}
	return ""
}

func (x *UploadFileRspBody) GetServerDns() string {
	if x != nil {
		return x.ServerDns
	}
	return ""
}

func (x *UploadFileRspBody) GetBusId() int32 {
	if x != nil {
		return x.BusId
	}
	return 0
}

func (x *UploadFileRspBody) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *UploadFileRspBody) GetFileKey() []byte {
	if x != nil {
		return x.FileKey
	}
	return nil
}

func (x *UploadFileRspBody) GetCheckKey() []byte {
	if x != nil {
		return x.CheckKey
	}
	return nil
}

func (x *UploadFileRspBody) GetBoolFileExist() bool {
	if x != nil {
		return x.BoolFileExist
	}
	return false
}

var File_oidb0x6d6_proto protoreflect.FileDescriptor

var file_oidb0x6d6_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6f, 0x69, 0x64, 0x62, 0x30, 0x78, 0x36, 0x64, 0x36, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x75, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x75, 0x73, 0x49,
	0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x22, 0x6b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xe5,
	0x01, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75,
	0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x62, 0x6f, 0x6f, 0x6c,
	0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x62, 0x6f, 0x6f, 0x6c, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x72, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x72, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x62, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x62, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x22, 0xed, 0x02, 0x0a, 0x13, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x49, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x44, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x6e, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x68, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x68, 0x61, 0x33, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x68, 0x61, 0x33,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d,
	0x64, 0x35, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x56, 0x61, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x56, 0x61, 0x6c,
	0x12, 0x22, 0x0a, 0x0c, 0x73, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x61, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x50,
	0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x50, 0x6f, 0x72, 0x74, 0x22, 0xbf, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62,
	0x75, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x46, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x91, 0x01, 0x0a, 0x0f, 0x4d, 0x6f, 0x76,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07,
	0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72,
	0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbf, 0x01, 0x0a,
	0x11, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b,
	0x6e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6e, 0x65, 0x77, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x6b,
	0x0a, 0x11, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xe5, 0x02, 0x0a, 0x0b,
	0x44, 0x36, 0x44, 0x36, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x38, 0x0a, 0x0d, 0x75,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52,
	0x65, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0d, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x3e, 0x0a, 0x0f, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0f, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0d, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52,
	0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79,
	0x52, 0x0d, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12,
	0x32, 0x0a, 0x0b, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0b, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x22, 0x83, 0x01, 0x0a, 0x0d, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x73,
	0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x68, 0x61, 0x22, 0xb9, 0x01, 0x0a, 0x0d, 0x52, 0x65,
	0x73, 0x65, 0x6e, 0x64, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72,
	0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x4b, 0x65, 0x79, 0x22, 0xe5, 0x02, 0x0a, 0x0b, 0x44, 0x36, 0x44, 0x36, 0x52, 0x73,
	0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x38, 0x0a, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79,
	0x52, 0x0d, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x34, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x52,
	0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x3e, 0x0a, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70,
	0x42, 0x6f, 0x64, 0x79, 0x52, 0x0f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79,
	0x52, 0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12,
	0x38, 0x0a, 0x0d, 0x72, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x52, 0x65, 0x6e, 0x61, 0x6d, 0x65, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0d, 0x72, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x12, 0x32, 0x0a, 0x0b, 0x6d, 0x6f, 0x76,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x4d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79,
	0x52, 0x0b, 0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x22, 0xb9, 0x02,
	0x0a, 0x11, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x65, 0x6e, 0x74, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x36, 0x34, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03,
	0x73, 0x68, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x61, 0x33, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x73, 0x68, 0x61, 0x33, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d, 0x64, 0x35, 0x22, 0xaf, 0x02, 0x0a, 0x11, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73,
	0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x49, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x6e, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x44, 0x6e,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x4b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x62, 0x6f, 0x6f, 0x6c, 0x46, 0x69, 0x6c,
	0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x62, 0x6f,
	0x6f, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x42, 0x08, 0x5a, 0x06, 0x2e,
	0x3b, 0x6f, 0x69, 0x64, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oidb0x6d6_proto_rawDescOnce sync.Once
	file_oidb0x6d6_proto_rawDescData = file_oidb0x6d6_proto_rawDesc
)

func file_oidb0x6d6_proto_rawDescGZIP() []byte {
	file_oidb0x6d6_proto_rawDescOnce.Do(func() {
		file_oidb0x6d6_proto_rawDescData = protoimpl.X.CompressGZIP(file_oidb0x6d6_proto_rawDescData)
	})
	return file_oidb0x6d6_proto_rawDescData
}

var file_oidb0x6d6_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_oidb0x6d6_proto_goTypes = []interface{}{
	(*DeleteFileReqBody)(nil),   // 0: DeleteFileReqBody
	(*DeleteFileRspBody)(nil),   // 1: DeleteFileRspBody
	(*DownloadFileReqBody)(nil), // 2: DownloadFileReqBody
	(*DownloadFileRspBody)(nil), // 3: DownloadFileRspBody
	(*MoveFileReqBody)(nil),     // 4: MoveFileReqBody
	(*MoveFileRspBody)(nil),     // 5: MoveFileRspBody
	(*RenameFileReqBody)(nil),   // 6: RenameFileReqBody
	(*RenameFileRspBody)(nil),   // 7: RenameFileRspBody
	(*D6D6ReqBody)(nil),         // 8: D6D6ReqBody
	(*ResendReqBody)(nil),       // 9: ResendReqBody
	(*ResendRspBody)(nil),       // 10: ResendRspBody
	(*D6D6RspBody)(nil),         // 11: D6D6RspBody
	(*UploadFileReqBody)(nil),   // 12: UploadFileReqBody
	(*UploadFileRspBody)(nil),   // 13: UploadFileRspBody
}
var file_oidb0x6d6_proto_depIdxs = []int32{
	12, // 0: D6D6ReqBody.uploadFileReq:type_name -> UploadFileReqBody
	9,  // 1: D6D6ReqBody.resendFileReq:type_name -> ResendReqBody
	2,  // 2: D6D6ReqBody.downloadFileReq:type_name -> DownloadFileReqBody
	0,  // 3: D6D6ReqBody.deleteFileReq:type_name -> DeleteFileReqBody
	6,  // 4: D6D6ReqBody.renameFileReq:type_name -> RenameFileReqBody
	4,  // 5: D6D6ReqBody.moveFileReq:type_name -> MoveFileReqBody
	13, // 6: D6D6RspBody.uploadFileRsp:type_name -> UploadFileRspBody
	10, // 7: D6D6RspBody.resendFileRsp:type_name -> ResendRspBody
	3,  // 8: D6D6RspBody.downloadFileRsp:type_name -> DownloadFileRspBody
	1,  // 9: D6D6RspBody.deleteFileRsp:type_name -> DeleteFileRspBody
	7,  // 10: D6D6RspBody.renameFileRsp:type_name -> RenameFileRspBody
	5,  // 11: D6D6RspBody.moveFileRsp:type_name -> MoveFileRspBody
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_oidb0x6d6_proto_init() }
func file_oidb0x6d6_proto_init() {
	if File_oidb0x6d6_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oidb0x6d6_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteFileRspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DownloadFileRspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveFileReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoveFileRspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameFileReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RenameFileRspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*D6D6ReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResendRspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*D6D6RspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d6_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadFileRspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oidb0x6d6_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oidb0x6d6_proto_goTypes,
		DependencyIndexes: file_oidb0x6d6_proto_depIdxs,
		MessageInfos:      file_oidb0x6d6_proto_msgTypes,
	}.Build()
	File_oidb0x6d6_proto = out.File
	file_oidb0x6d6_proto_rawDesc = nil
	file_oidb0x6d6_proto_goTypes = nil
	file_oidb0x6d6_proto_depIdxs = nil
}
