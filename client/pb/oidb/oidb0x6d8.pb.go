// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: oidb0x6d8.proto

package oidb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type D6D8ReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileInfoReq       *GetFileInfoReqBody  `protobuf:"bytes,1,opt,name=fileInfoReq" json:"fileInfoReq,omitempty"`
	FileListInfoReq   *GetFileListReqBody  `protobuf:"bytes,2,opt,name=fileListInfoReq" json:"fileListInfoReq,omitempty"`
	GroupFileCountReq *GetFileCountReqBody `protobuf:"bytes,3,opt,name=groupFileCountReq" json:"groupFileCountReq,omitempty"`
	GroupSpaceReq     *GetSpaceReqBody     `protobuf:"bytes,4,opt,name=groupSpaceReq" json:"groupSpaceReq,omitempty"`
}

func (x *D6D8ReqBody) Reset() {
	*x = D6D8ReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *D6D8ReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*D6D8ReqBody) ProtoMessage() {}

func (x *D6D8ReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use D6D8ReqBody.ProtoReflect.Descriptor instead.
func (*D6D8ReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{0}
}

func (x *D6D8ReqBody) GetFileInfoReq() *GetFileInfoReqBody {
	if x != nil {
		return x.FileInfoReq
	}
	return nil
}

func (x *D6D8ReqBody) GetFileListInfoReq() *GetFileListReqBody {
	if x != nil {
		return x.FileListInfoReq
	}
	return nil
}

func (x *D6D8ReqBody) GetGroupFileCountReq() *GetFileCountReqBody {
	if x != nil {
		return x.GroupFileCountReq
	}
	return nil
}

func (x *D6D8ReqBody) GetGroupSpaceReq() *GetSpaceReqBody {
	if x != nil {
		return x.GroupSpaceReq
	}
	return nil
}

type D6D8RspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileInfoRsp     *GetFileInfoRspBody  `protobuf:"bytes,1,opt,name=fileInfoRsp" json:"fileInfoRsp,omitempty"`
	FileListInfoRsp *GetFileListRspBody  `protobuf:"bytes,2,opt,name=fileListInfoRsp" json:"fileListInfoRsp,omitempty"`
	FileCountRsp    *GetFileCountRspBody `protobuf:"bytes,3,opt,name=fileCountRsp" json:"fileCountRsp,omitempty"`
	GroupSpaceRsp   *GetSpaceRspBody     `protobuf:"bytes,4,opt,name=groupSpaceRsp" json:"groupSpaceRsp,omitempty"`
}

func (x *D6D8RspBody) Reset() {
	*x = D6D8RspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *D6D8RspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*D6D8RspBody) ProtoMessage() {}

func (x *D6D8RspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use D6D8RspBody.ProtoReflect.Descriptor instead.
func (*D6D8RspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{1}
}

func (x *D6D8RspBody) GetFileInfoRsp() *GetFileInfoRspBody {
	if x != nil {
		return x.FileInfoRsp
	}
	return nil
}

func (x *D6D8RspBody) GetFileListInfoRsp() *GetFileListRspBody {
	if x != nil {
		return x.FileListInfoRsp
	}
	return nil
}

func (x *D6D8RspBody) GetFileCountRsp() *GetFileCountRspBody {
	if x != nil {
		return x.FileCountRsp
	}
	return nil
}

func (x *D6D8RspBody) GetGroupSpaceRsp() *GetSpaceRspBody {
	if x != nil {
		return x.GroupSpaceRsp
	}
	return nil
}

type GetFileInfoReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode *uint64 `protobuf:"varint,1,opt,name=groupCode" json:"groupCode,omitempty"`
	AppId     *uint32 `protobuf:"varint,2,opt,name=appId" json:"appId,omitempty"`
	BusId     *uint32 `protobuf:"varint,3,opt,name=busId" json:"busId,omitempty"`
	FileId    *string `protobuf:"bytes,4,opt,name=fileId" json:"fileId,omitempty"`
	FieldFlag *uint32 `protobuf:"varint,5,opt,name=fieldFlag" json:"fieldFlag,omitempty"`
}

func (x *GetFileInfoReqBody) Reset() {
	*x = GetFileInfoReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoReqBody) ProtoMessage() {}

func (x *GetFileInfoReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoReqBody.ProtoReflect.Descriptor instead.
func (*GetFileInfoReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{2}
}

func (x *GetFileInfoReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *GetFileInfoReqBody) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *GetFileInfoReqBody) GetBusId() uint32 {
	if x != nil && x.BusId != nil {
		return *x.BusId
	}
	return 0
}

func (x *GetFileInfoReqBody) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *GetFileInfoReqBody) GetFieldFlag() uint32 {
	if x != nil && x.FieldFlag != nil {
		return *x.FieldFlag
	}
	return 0
}

type GetFileInfoRspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode       *int32         `protobuf:"varint,1,opt,name=retCode" json:"retCode,omitempty"`
	RetMsg        *string        `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ClientWording *string        `protobuf:"bytes,3,opt,name=clientWording" json:"clientWording,omitempty"`
	FileInfo      *GroupFileInfo `protobuf:"bytes,4,opt,name=fileInfo" json:"fileInfo,omitempty"`
}

func (x *GetFileInfoRspBody) Reset() {
	*x = GetFileInfoRspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileInfoRspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileInfoRspBody) ProtoMessage() {}

func (x *GetFileInfoRspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileInfoRspBody.ProtoReflect.Descriptor instead.
func (*GetFileInfoRspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{3}
}

func (x *GetFileInfoRspBody) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *GetFileInfoRspBody) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *GetFileInfoRspBody) GetClientWording() string {
	if x != nil && x.ClientWording != nil {
		return *x.ClientWording
	}
	return ""
}

func (x *GetFileInfoRspBody) GetFileInfo() *GroupFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

type GetFileListRspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode       *int32                     `protobuf:"varint,1,opt,name=retCode" json:"retCode,omitempty"`
	RetMsg        *string                    `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ClientWording *string                    `protobuf:"bytes,3,opt,name=clientWording" json:"clientWording,omitempty"`
	IsEnd         *bool                      `protobuf:"varint,4,opt,name=isEnd" json:"isEnd,omitempty"`
	ItemList      []*GetFileListRspBody_Item `protobuf:"bytes,5,rep,name=itemList" json:"itemList,omitempty"`
	MaxTimestamp  *FileTimeStamp             `protobuf:"bytes,6,opt,name=maxTimestamp" json:"maxTimestamp,omitempty"`
	AllFileCount  *uint32                    `protobuf:"varint,7,opt,name=allFileCount" json:"allFileCount,omitempty"`
	FilterCode    *uint32                    `protobuf:"varint,8,opt,name=filterCode" json:"filterCode,omitempty"`
	SafeCheckFlag *bool                      `protobuf:"varint,11,opt,name=safeCheckFlag" json:"safeCheckFlag,omitempty"`
	SafeCheckRes  *uint32                    `protobuf:"varint,12,opt,name=safeCheckRes" json:"safeCheckRes,omitempty"`
	NextIndex     *uint32                    `protobuf:"varint,13,opt,name=nextIndex" json:"nextIndex,omitempty"`
	Context       []byte                     `protobuf:"bytes,14,opt,name=context" json:"context,omitempty"`
	Role          *uint32                    `protobuf:"varint,15,opt,name=role" json:"role,omitempty"`
	OpenFlag      *uint32                    `protobuf:"varint,16,opt,name=openFlag" json:"openFlag,omitempty"`
}

func (x *GetFileListRspBody) Reset() {
	*x = GetFileListRspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileListRspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileListRspBody) ProtoMessage() {}

func (x *GetFileListRspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileListRspBody.ProtoReflect.Descriptor instead.
func (*GetFileListRspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{4}
}

func (x *GetFileListRspBody) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *GetFileListRspBody) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *GetFileListRspBody) GetClientWording() string {
	if x != nil && x.ClientWording != nil {
		return *x.ClientWording
	}
	return ""
}

func (x *GetFileListRspBody) GetIsEnd() bool {
	if x != nil && x.IsEnd != nil {
		return *x.IsEnd
	}
	return false
}

func (x *GetFileListRspBody) GetItemList() []*GetFileListRspBody_Item {
	if x != nil {
		return x.ItemList
	}
	return nil
}

func (x *GetFileListRspBody) GetMaxTimestamp() *FileTimeStamp {
	if x != nil {
		return x.MaxTimestamp
	}
	return nil
}

func (x *GetFileListRspBody) GetAllFileCount() uint32 {
	if x != nil && x.AllFileCount != nil {
		return *x.AllFileCount
	}
	return 0
}

func (x *GetFileListRspBody) GetFilterCode() uint32 {
	if x != nil && x.FilterCode != nil {
		return *x.FilterCode
	}
	return 0
}

func (x *GetFileListRspBody) GetSafeCheckFlag() bool {
	if x != nil && x.SafeCheckFlag != nil {
		return *x.SafeCheckFlag
	}
	return false
}

func (x *GetFileListRspBody) GetSafeCheckRes() uint32 {
	if x != nil && x.SafeCheckRes != nil {
		return *x.SafeCheckRes
	}
	return 0
}

func (x *GetFileListRspBody) GetNextIndex() uint32 {
	if x != nil && x.NextIndex != nil {
		return *x.NextIndex
	}
	return 0
}

func (x *GetFileListRspBody) GetContext() []byte {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *GetFileListRspBody) GetRole() uint32 {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return 0
}

func (x *GetFileListRspBody) GetOpenFlag() uint32 {
	if x != nil && x.OpenFlag != nil {
		return *x.OpenFlag
	}
	return 0
}

type GroupFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileId         *string `protobuf:"bytes,1,opt,name=fileId" json:"fileId,omitempty"`
	FileName       *string `protobuf:"bytes,2,opt,name=fileName" json:"fileName,omitempty"`
	FileSize       *uint64 `protobuf:"varint,3,opt,name=fileSize" json:"fileSize,omitempty"`
	BusId          *uint32 `protobuf:"varint,4,opt,name=busId" json:"busId,omitempty"`
	UploadedSize   *uint64 `protobuf:"varint,5,opt,name=uploadedSize" json:"uploadedSize,omitempty"`
	UploadTime     *uint32 `protobuf:"varint,6,opt,name=uploadTime" json:"uploadTime,omitempty"`
	DeadTime       *uint32 `protobuf:"varint,7,opt,name=deadTime" json:"deadTime,omitempty"`
	ModifyTime     *uint32 `protobuf:"varint,8,opt,name=modifyTime" json:"modifyTime,omitempty"`
	DownloadTimes  *uint32 `protobuf:"varint,9,opt,name=downloadTimes" json:"downloadTimes,omitempty"`
	Sha            []byte  `protobuf:"bytes,10,opt,name=sha" json:"sha,omitempty"`
	Sha3           []byte  `protobuf:"bytes,11,opt,name=sha3" json:"sha3,omitempty"`
	Md5            []byte  `protobuf:"bytes,12,opt,name=md5" json:"md5,omitempty"`
	LocalPath      *string `protobuf:"bytes,13,opt,name=localPath" json:"localPath,omitempty"`
	UploaderName   *string `protobuf:"bytes,14,opt,name=uploaderName" json:"uploaderName,omitempty"`
	UploaderUin    *uint64 `protobuf:"varint,15,opt,name=uploaderUin" json:"uploaderUin,omitempty"`
	ParentFolderId *string `protobuf:"bytes,16,opt,name=parentFolderId" json:"parentFolderId,omitempty"`
}

func (x *GroupFileInfo) Reset() {
	*x = GroupFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupFileInfo) ProtoMessage() {}

func (x *GroupFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupFileInfo.ProtoReflect.Descriptor instead.
func (*GroupFileInfo) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{5}
}

func (x *GroupFileInfo) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

func (x *GroupFileInfo) GetFileName() string {
	if x != nil && x.FileName != nil {
		return *x.FileName
	}
	return ""
}

func (x *GroupFileInfo) GetFileSize() uint64 {
	if x != nil && x.FileSize != nil {
		return *x.FileSize
	}
	return 0
}

func (x *GroupFileInfo) GetBusId() uint32 {
	if x != nil && x.BusId != nil {
		return *x.BusId
	}
	return 0
}

func (x *GroupFileInfo) GetUploadedSize() uint64 {
	if x != nil && x.UploadedSize != nil {
		return *x.UploadedSize
	}
	return 0
}

func (x *GroupFileInfo) GetUploadTime() uint32 {
	if x != nil && x.UploadTime != nil {
		return *x.UploadTime
	}
	return 0
}

func (x *GroupFileInfo) GetDeadTime() uint32 {
	if x != nil && x.DeadTime != nil {
		return *x.DeadTime
	}
	return 0
}

func (x *GroupFileInfo) GetModifyTime() uint32 {
	if x != nil && x.ModifyTime != nil {
		return *x.ModifyTime
	}
	return 0
}

func (x *GroupFileInfo) GetDownloadTimes() uint32 {
	if x != nil && x.DownloadTimes != nil {
		return *x.DownloadTimes
	}
	return 0
}

func (x *GroupFileInfo) GetSha() []byte {
	if x != nil {
		return x.Sha
	}
	return nil
}

func (x *GroupFileInfo) GetSha3() []byte {
	if x != nil {
		return x.Sha3
	}
	return nil
}

func (x *GroupFileInfo) GetMd5() []byte {
	if x != nil {
		return x.Md5
	}
	return nil
}

func (x *GroupFileInfo) GetLocalPath() string {
	if x != nil && x.LocalPath != nil {
		return *x.LocalPath
	}
	return ""
}

func (x *GroupFileInfo) GetUploaderName() string {
	if x != nil && x.UploaderName != nil {
		return *x.UploaderName
	}
	return ""
}

func (x *GroupFileInfo) GetUploaderUin() uint64 {
	if x != nil && x.UploaderUin != nil {
		return *x.UploaderUin
	}
	return 0
}

func (x *GroupFileInfo) GetParentFolderId() string {
	if x != nil && x.ParentFolderId != nil {
		return *x.ParentFolderId
	}
	return ""
}

type GroupFolderInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FolderId       *string `protobuf:"bytes,1,opt,name=folderId" json:"folderId,omitempty"`
	ParentFolderId *string `protobuf:"bytes,2,opt,name=parentFolderId" json:"parentFolderId,omitempty"`
	FolderName     *string `protobuf:"bytes,3,opt,name=folderName" json:"folderName,omitempty"`
	CreateTime     *uint32 `protobuf:"varint,4,opt,name=createTime" json:"createTime,omitempty"`
	ModifyTime     *uint32 `protobuf:"varint,5,opt,name=modifyTime" json:"modifyTime,omitempty"`
	CreateUin      *uint64 `protobuf:"varint,6,opt,name=createUin" json:"createUin,omitempty"`
	CreatorName    *string `protobuf:"bytes,7,opt,name=creatorName" json:"creatorName,omitempty"`
	TotalFileCount *uint32 `protobuf:"varint,8,opt,name=totalFileCount" json:"totalFileCount,omitempty"`
}

func (x *GroupFolderInfo) Reset() {
	*x = GroupFolderInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GroupFolderInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupFolderInfo) ProtoMessage() {}

func (x *GroupFolderInfo) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupFolderInfo.ProtoReflect.Descriptor instead.
func (*GroupFolderInfo) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{6}
}

func (x *GroupFolderInfo) GetFolderId() string {
	if x != nil && x.FolderId != nil {
		return *x.FolderId
	}
	return ""
}

func (x *GroupFolderInfo) GetParentFolderId() string {
	if x != nil && x.ParentFolderId != nil {
		return *x.ParentFolderId
	}
	return ""
}

func (x *GroupFolderInfo) GetFolderName() string {
	if x != nil && x.FolderName != nil {
		return *x.FolderName
	}
	return ""
}

func (x *GroupFolderInfo) GetCreateTime() uint32 {
	if x != nil && x.CreateTime != nil {
		return *x.CreateTime
	}
	return 0
}

func (x *GroupFolderInfo) GetModifyTime() uint32 {
	if x != nil && x.ModifyTime != nil {
		return *x.ModifyTime
	}
	return 0
}

func (x *GroupFolderInfo) GetCreateUin() uint64 {
	if x != nil && x.CreateUin != nil {
		return *x.CreateUin
	}
	return 0
}

func (x *GroupFolderInfo) GetCreatorName() string {
	if x != nil && x.CreatorName != nil {
		return *x.CreatorName
	}
	return ""
}

func (x *GroupFolderInfo) GetTotalFileCount() uint32 {
	if x != nil && x.TotalFileCount != nil {
		return *x.TotalFileCount
	}
	return 0
}

type GetFileListReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode      *uint64        `protobuf:"varint,1,opt,name=groupCode" json:"groupCode,omitempty"`
	AppId          *uint32        `protobuf:"varint,2,opt,name=appId" json:"appId,omitempty"`
	FolderId       *string        `protobuf:"bytes,3,opt,name=folderId" json:"folderId,omitempty"`
	StartTimestamp *FileTimeStamp `protobuf:"bytes,4,opt,name=startTimestamp" json:"startTimestamp,omitempty"`
	FileCount      *uint32        `protobuf:"varint,5,opt,name=fileCount" json:"fileCount,omitempty"`
	MaxTimestamp   *FileTimeStamp `protobuf:"bytes,6,opt,name=maxTimestamp" json:"maxTimestamp,omitempty"`
	AllFileCount   *uint32        `protobuf:"varint,7,opt,name=allFileCount" json:"allFileCount,omitempty"`
	ReqFrom        *uint32        `protobuf:"varint,8,opt,name=reqFrom" json:"reqFrom,omitempty"`
	SortBy         *uint32        `protobuf:"varint,9,opt,name=sortBy" json:"sortBy,omitempty"`
	FilterCode     *uint32        `protobuf:"varint,10,opt,name=filterCode" json:"filterCode,omitempty"`
	Uin            *uint64        `protobuf:"varint,11,opt,name=uin" json:"uin,omitempty"`
	FieldFlag      *uint32        `protobuf:"varint,12,opt,name=fieldFlag" json:"fieldFlag,omitempty"`
	StartIndex     *uint32        `protobuf:"varint,13,opt,name=startIndex" json:"startIndex,omitempty"`
	Context        []byte         `protobuf:"bytes,14,opt,name=context" json:"context,omitempty"`
	ClientVersion  *uint32        `protobuf:"varint,15,opt,name=clientVersion" json:"clientVersion,omitempty"`
}

func (x *GetFileListReqBody) Reset() {
	*x = GetFileListReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileListReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileListReqBody) ProtoMessage() {}

func (x *GetFileListReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileListReqBody.ProtoReflect.Descriptor instead.
func (*GetFileListReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{7}
}

func (x *GetFileListReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *GetFileListReqBody) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *GetFileListReqBody) GetFolderId() string {
	if x != nil && x.FolderId != nil {
		return *x.FolderId
	}
	return ""
}

func (x *GetFileListReqBody) GetStartTimestamp() *FileTimeStamp {
	if x != nil {
		return x.StartTimestamp
	}
	return nil
}

func (x *GetFileListReqBody) GetFileCount() uint32 {
	if x != nil && x.FileCount != nil {
		return *x.FileCount
	}
	return 0
}

func (x *GetFileListReqBody) GetMaxTimestamp() *FileTimeStamp {
	if x != nil {
		return x.MaxTimestamp
	}
	return nil
}

func (x *GetFileListReqBody) GetAllFileCount() uint32 {
	if x != nil && x.AllFileCount != nil {
		return *x.AllFileCount
	}
	return 0
}

func (x *GetFileListReqBody) GetReqFrom() uint32 {
	if x != nil && x.ReqFrom != nil {
		return *x.ReqFrom
	}
	return 0
}

func (x *GetFileListReqBody) GetSortBy() uint32 {
	if x != nil && x.SortBy != nil {
		return *x.SortBy
	}
	return 0
}

func (x *GetFileListReqBody) GetFilterCode() uint32 {
	if x != nil && x.FilterCode != nil {
		return *x.FilterCode
	}
	return 0
}

func (x *GetFileListReqBody) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *GetFileListReqBody) GetFieldFlag() uint32 {
	if x != nil && x.FieldFlag != nil {
		return *x.FieldFlag
	}
	return 0
}

func (x *GetFileListReqBody) GetStartIndex() uint32 {
	if x != nil && x.StartIndex != nil {
		return *x.StartIndex
	}
	return 0
}

func (x *GetFileListReqBody) GetContext() []byte {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *GetFileListReqBody) GetClientVersion() uint32 {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return 0
}

type GetFileCountReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode *uint64 `protobuf:"varint,1,opt,name=groupCode" json:"groupCode,omitempty"`
	AppId     *uint32 `protobuf:"varint,2,opt,name=appId" json:"appId,omitempty"`
	BusId     *uint32 `protobuf:"varint,3,opt,name=busId" json:"busId,omitempty"`
}

func (x *GetFileCountReqBody) Reset() {
	*x = GetFileCountReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileCountReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileCountReqBody) ProtoMessage() {}

func (x *GetFileCountReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileCountReqBody.ProtoReflect.Descriptor instead.
func (*GetFileCountReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{8}
}

func (x *GetFileCountReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *GetFileCountReqBody) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

func (x *GetFileCountReqBody) GetBusId() uint32 {
	if x != nil && x.BusId != nil {
		return *x.BusId
	}
	return 0
}

type GetSpaceReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupCode *uint64 `protobuf:"varint,1,opt,name=groupCode" json:"groupCode,omitempty"`
	AppId     *uint32 `protobuf:"varint,2,opt,name=appId" json:"appId,omitempty"`
}

func (x *GetSpaceReqBody) Reset() {
	*x = GetSpaceReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpaceReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpaceReqBody) ProtoMessage() {}

func (x *GetSpaceReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpaceReqBody.ProtoReflect.Descriptor instead.
func (*GetSpaceReqBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{9}
}

func (x *GetSpaceReqBody) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *GetSpaceReqBody) GetAppId() uint32 {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return 0
}

type GetFileCountRspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode       *int32  `protobuf:"varint,1,opt,name=retCode" json:"retCode,omitempty"`
	RetMsg        *string `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ClientWording *string `protobuf:"bytes,3,opt,name=clientWording" json:"clientWording,omitempty"`
	AllFileCount  *uint32 `protobuf:"varint,4,opt,name=allFileCount" json:"allFileCount,omitempty"`
	FileTooMany   *bool   `protobuf:"varint,5,opt,name=fileTooMany" json:"fileTooMany,omitempty"`
	LimitCount    *uint32 `protobuf:"varint,6,opt,name=limitCount" json:"limitCount,omitempty"`
	IsFull        *bool   `protobuf:"varint,7,opt,name=isFull" json:"isFull,omitempty"`
}

func (x *GetFileCountRspBody) Reset() {
	*x = GetFileCountRspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileCountRspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileCountRspBody) ProtoMessage() {}

func (x *GetFileCountRspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileCountRspBody.ProtoReflect.Descriptor instead.
func (*GetFileCountRspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{10}
}

func (x *GetFileCountRspBody) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *GetFileCountRspBody) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *GetFileCountRspBody) GetClientWording() string {
	if x != nil && x.ClientWording != nil {
		return *x.ClientWording
	}
	return ""
}

func (x *GetFileCountRspBody) GetAllFileCount() uint32 {
	if x != nil && x.AllFileCount != nil {
		return *x.AllFileCount
	}
	return 0
}

func (x *GetFileCountRspBody) GetFileTooMany() bool {
	if x != nil && x.FileTooMany != nil {
		return *x.FileTooMany
	}
	return false
}

func (x *GetFileCountRspBody) GetLimitCount() uint32 {
	if x != nil && x.LimitCount != nil {
		return *x.LimitCount
	}
	return 0
}

func (x *GetFileCountRspBody) GetIsFull() bool {
	if x != nil && x.IsFull != nil {
		return *x.IsFull
	}
	return false
}

type GetSpaceRspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode       *int32  `protobuf:"varint,1,opt,name=retCode" json:"retCode,omitempty"`
	RetMsg        *string `protobuf:"bytes,2,opt,name=retMsg" json:"retMsg,omitempty"`
	ClientWording *string `protobuf:"bytes,3,opt,name=clientWording" json:"clientWording,omitempty"`
	TotalSpace    *uint64 `protobuf:"varint,4,opt,name=totalSpace" json:"totalSpace,omitempty"`
	UsedSpace     *uint64 `protobuf:"varint,5,opt,name=usedSpace" json:"usedSpace,omitempty"`
}

func (x *GetSpaceRspBody) Reset() {
	*x = GetSpaceRspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpaceRspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpaceRspBody) ProtoMessage() {}

func (x *GetSpaceRspBody) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpaceRspBody.ProtoReflect.Descriptor instead.
func (*GetSpaceRspBody) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{11}
}

func (x *GetSpaceRspBody) GetRetCode() int32 {
	if x != nil && x.RetCode != nil {
		return *x.RetCode
	}
	return 0
}

func (x *GetSpaceRspBody) GetRetMsg() string {
	if x != nil && x.RetMsg != nil {
		return *x.RetMsg
	}
	return ""
}

func (x *GetSpaceRspBody) GetClientWording() string {
	if x != nil && x.ClientWording != nil {
		return *x.ClientWording
	}
	return ""
}

func (x *GetSpaceRspBody) GetTotalSpace() uint64 {
	if x != nil && x.TotalSpace != nil {
		return *x.TotalSpace
	}
	return 0
}

func (x *GetSpaceRspBody) GetUsedSpace() uint64 {
	if x != nil && x.UsedSpace != nil {
		return *x.UsedSpace
	}
	return 0
}

type FileTimeStamp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadTime *uint32 `protobuf:"varint,1,opt,name=uploadTime" json:"uploadTime,omitempty"`
	FileId     *string `protobuf:"bytes,2,opt,name=fileId" json:"fileId,omitempty"`
}

func (x *FileTimeStamp) Reset() {
	*x = FileTimeStamp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTimeStamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTimeStamp) ProtoMessage() {}

func (x *FileTimeStamp) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTimeStamp.ProtoReflect.Descriptor instead.
func (*FileTimeStamp) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{12}
}

func (x *FileTimeStamp) GetUploadTime() uint32 {
	if x != nil && x.UploadTime != nil {
		return *x.UploadTime
	}
	return 0
}

func (x *FileTimeStamp) GetFileId() string {
	if x != nil && x.FileId != nil {
		return *x.FileId
	}
	return ""
}

type GetFileListRspBody_Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       *uint32          `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	FolderInfo *GroupFolderInfo `protobuf:"bytes,2,opt,name=folderInfo" json:"folderInfo,omitempty"`
	FileInfo   *GroupFileInfo   `protobuf:"bytes,3,opt,name=fileInfo" json:"fileInfo,omitempty"`
}

func (x *GetFileListRspBody_Item) Reset() {
	*x = GetFileListRspBody_Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oidb0x6d8_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileListRspBody_Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileListRspBody_Item) ProtoMessage() {}

func (x *GetFileListRspBody_Item) ProtoReflect() protoreflect.Message {
	mi := &file_oidb0x6d8_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileListRspBody_Item.ProtoReflect.Descriptor instead.
func (*GetFileListRspBody_Item) Descriptor() ([]byte, []int) {
	return file_oidb0x6d8_proto_rawDescGZIP(), []int{4, 0}
}

func (x *GetFileListRspBody_Item) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *GetFileListRspBody_Item) GetFolderInfo() *GroupFolderInfo {
	if x != nil {
		return x.FolderInfo
	}
	return nil
}

func (x *GetFileListRspBody_Item) GetFileInfo() *GroupFileInfo {
	if x != nil {
		return x.FileInfo
	}
	return nil
}

var File_oidb0x6d8_proto protoreflect.FileDescriptor

var file_oidb0x6d8_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6f, 0x69, 0x64, 0x62, 0x30, 0x78, 0x36, 0x64, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xff, 0x01, 0x0a, 0x0b, 0x44, 0x36, 0x44, 0x38, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0b, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x3d, 0x0a, 0x0f, 0x66, 0x69, 0x6c, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x42, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x36, 0x0a, 0x0d, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x42, 0x6f, 0x64, 0x79, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x22, 0xf5, 0x01, 0x0a, 0x0b, 0x44, 0x36, 0x44, 0x38, 0x52, 0x73, 0x70, 0x42,
	0x6f, 0x64, 0x79, 0x12, 0x35, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x73, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0b, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x3d, 0x0a, 0x0f, 0x66, 0x69,
	0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0f, 0x66, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x38, 0x0a, 0x0c, 0x66, 0x69, 0x6c,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73,
	0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x73, 0x70, 0x12, 0x36, 0x0a, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x73, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x52, 0x0d, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x73, 0x70, 0x22, 0x94, 0x01, 0x0a, 0x12,
	0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x42, 0x6f,
	0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x6c, 0x61,
	0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x6c,
	0x61, 0x67, 0x22, 0x98, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e,
	0x67, 0x12, 0x2a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xdc, 0x04,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70,
	0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x69, 0x73, 0x45, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x45,
	0x6e, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0c,
	0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c,
	0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x24, 0x0a, 0x0d, 0x73, 0x61, 0x66, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x46, 0x6c, 0x61,
	0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x61, 0x66, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x73, 0x61,
	0x66, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x65,
	0x78, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6e,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x46, 0x6c,
	0x61, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x6f, 0x70, 0x65, 0x6e, 0x46, 0x6c,
	0x61, 0x67, 0x1a, 0x78, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x30,
	0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xdf, 0x03, 0x0a,
	0x0d, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x62,
	0x75, 0x73, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x64,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x61, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x64, 0x65, 0x61, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x68,
	0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x68, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x68, 0x61, 0x33, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x68, 0x61, 0x33,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x64, 0x35, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6d,
	0x64, 0x35, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x65, 0x72,
	0x55, 0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x75, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x65, 0x72, 0x55, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x9d,
	0x02, 0x0a, 0x0f, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26,
	0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f,
	0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x55, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x55, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46,
	0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xf4,
	0x03, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0e, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1c, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0c, 0x6d,
	0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x72, 0x65, 0x71, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6f, 0x72, 0x74, 0x42, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x73,
	0x6f, 0x72, 0x74, 0x42, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x69, 0x6e, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x03, 0x75, 0x69, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x46, 0x6c, 0x61, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x46, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x5f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x62, 0x75, 0x73, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x22, 0xeb, 0x01,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x73,
	0x70, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x20, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x6f, 0x6f, 0x4d, 0x61, 0x6e, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x6f, 0x6f, 0x4d,
	0x61, 0x6e, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x46, 0x75, 0x6c, 0x6c, 0x22, 0xa7, 0x01, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73,
	0x67, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x57, 0x6f, 0x72, 0x64, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x57, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x64, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x75, 0x73, 0x65, 0x64,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x22, 0x47, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x75, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x42, 0x08,
	0x5a, 0x06, 0x2e, 0x3b, 0x6f, 0x69, 0x64, 0x62,
}

var (
	file_oidb0x6d8_proto_rawDescOnce sync.Once
	file_oidb0x6d8_proto_rawDescData = file_oidb0x6d8_proto_rawDesc
)

func file_oidb0x6d8_proto_rawDescGZIP() []byte {
	file_oidb0x6d8_proto_rawDescOnce.Do(func() {
		file_oidb0x6d8_proto_rawDescData = protoimpl.X.CompressGZIP(file_oidb0x6d8_proto_rawDescData)
	})
	return file_oidb0x6d8_proto_rawDescData
}

var file_oidb0x6d8_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_oidb0x6d8_proto_goTypes = []interface{}{
	(*D6D8ReqBody)(nil),             // 0: D6D8ReqBody
	(*D6D8RspBody)(nil),             // 1: D6D8RspBody
	(*GetFileInfoReqBody)(nil),      // 2: GetFileInfoReqBody
	(*GetFileInfoRspBody)(nil),      // 3: GetFileInfoRspBody
	(*GetFileListRspBody)(nil),      // 4: GetFileListRspBody
	(*GroupFileInfo)(nil),           // 5: GroupFileInfo
	(*GroupFolderInfo)(nil),         // 6: GroupFolderInfo
	(*GetFileListReqBody)(nil),      // 7: GetFileListReqBody
	(*GetFileCountReqBody)(nil),     // 8: GetFileCountReqBody
	(*GetSpaceReqBody)(nil),         // 9: GetSpaceReqBody
	(*GetFileCountRspBody)(nil),     // 10: GetFileCountRspBody
	(*GetSpaceRspBody)(nil),         // 11: GetSpaceRspBody
	(*FileTimeStamp)(nil),           // 12: FileTimeStamp
	(*GetFileListRspBody_Item)(nil), // 13: GetFileListRspBody.Item
}
var file_oidb0x6d8_proto_depIdxs = []int32{
	2,  // 0: D6D8ReqBody.fileInfoReq:type_name -> GetFileInfoReqBody
	7,  // 1: D6D8ReqBody.fileListInfoReq:type_name -> GetFileListReqBody
	8,  // 2: D6D8ReqBody.groupFileCountReq:type_name -> GetFileCountReqBody
	9,  // 3: D6D8ReqBody.groupSpaceReq:type_name -> GetSpaceReqBody
	3,  // 4: D6D8RspBody.fileInfoRsp:type_name -> GetFileInfoRspBody
	4,  // 5: D6D8RspBody.fileListInfoRsp:type_name -> GetFileListRspBody
	10, // 6: D6D8RspBody.fileCountRsp:type_name -> GetFileCountRspBody
	11, // 7: D6D8RspBody.groupSpaceRsp:type_name -> GetSpaceRspBody
	5,  // 8: GetFileInfoRspBody.fileInfo:type_name -> GroupFileInfo
	13, // 9: GetFileListRspBody.itemList:type_name -> GetFileListRspBody.Item
	12, // 10: GetFileListRspBody.maxTimestamp:type_name -> FileTimeStamp
	12, // 11: GetFileListReqBody.startTimestamp:type_name -> FileTimeStamp
	12, // 12: GetFileListReqBody.maxTimestamp:type_name -> FileTimeStamp
	6,  // 13: GetFileListRspBody.Item.folderInfo:type_name -> GroupFolderInfo
	5,  // 14: GetFileListRspBody.Item.fileInfo:type_name -> GroupFileInfo
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_oidb0x6d8_proto_init() }
func file_oidb0x6d8_proto_init() {
	if File_oidb0x6d8_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oidb0x6d8_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*D6D8ReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*D6D8RspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileInfoRspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileListRspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GroupFolderInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileListReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileCountReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpaceReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileCountRspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpaceRspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTimeStamp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_oidb0x6d8_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileListRspBody_Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oidb0x6d8_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oidb0x6d8_proto_goTypes,
		DependencyIndexes: file_oidb0x6d8_proto_depIdxs,
		MessageInfos:      file_oidb0x6d8_proto_msgTypes,
	}.Build()
	File_oidb0x6d8_proto = out.File
	file_oidb0x6d8_proto_rawDesc = nil
	file_oidb0x6d8_proto_goTypes = nil
	file_oidb0x6d8_proto_depIdxs = nil
}
