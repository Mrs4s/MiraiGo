// Code generated by protoc-gen-golite. DO NOT EDIT.
// source: oidb0xeb7.proto

package oidb

// DEB7 prefix
type DEB7ReqBody struct {
	SignInStatusReq *StSignInStatusReq `protobuf:"bytes,1,opt"`
	SignInWriteReq  *StSignInWriteReq  `protobuf:"bytes,2,opt"`
}

type DEB7Ret struct {
	Code *uint32 `protobuf:"varint,1,opt"`
	Msg  *string `protobuf:"bytes,2,opt"`
}

func (x *DEB7Ret) GetCode() uint32 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *DEB7Ret) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

type DEB7RspBody struct {
	SignInStatusRsp *StSignInStatusRsp `protobuf:"bytes,1,opt"`
	SignInWriteRsp  *StSignInWriteRsp  `protobuf:"bytes,2,opt"`
}

type SignInStatusBase struct {
	Status           *uint32 `protobuf:"varint,1,opt"`
	CurrentTimeStamp *int64  `protobuf:"varint,2,opt"`
}

func (x *SignInStatusBase) GetStatus() uint32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *SignInStatusBase) GetCurrentTimeStamp() int64 {
	if x != nil && x.CurrentTimeStamp != nil {
		return *x.CurrentTimeStamp
	}
	return 0
}

type SignInStatusDoneInfo struct {
	LeftTitleWrod      *string  `protobuf:"bytes,1,opt"`
	RightDescWord      *string  `protobuf:"bytes,2,opt"`
	BelowPortraitWords []string `protobuf:"bytes,3,rep"`
	RecordUrl          *string  `protobuf:"bytes,4,opt"`
}

func (x *SignInStatusDoneInfo) GetLeftTitleWrod() string {
	if x != nil && x.LeftTitleWrod != nil {
		return *x.LeftTitleWrod
	}
	return ""
}

func (x *SignInStatusDoneInfo) GetRightDescWord() string {
	if x != nil && x.RightDescWord != nil {
		return *x.RightDescWord
	}
	return ""
}

func (x *SignInStatusDoneInfo) GetRecordUrl() string {
	if x != nil && x.RecordUrl != nil {
		return *x.RecordUrl
	}
	return ""
}

type SignInStatusGroupScore struct {
	GroupScoreWord *string `protobuf:"bytes,1,opt"`
	ScoreUrl       *string `protobuf:"bytes,2,opt"`
}

func (x *SignInStatusGroupScore) GetGroupScoreWord() string {
	if x != nil && x.GroupScoreWord != nil {
		return *x.GroupScoreWord
	}
	return ""
}

func (x *SignInStatusGroupScore) GetScoreUrl() string {
	if x != nil && x.ScoreUrl != nil {
		return *x.ScoreUrl
	}
	return ""
}

type SignInStatusNotInfo struct {
	ButtonWord        *string `protobuf:"bytes,1,opt"`
	SignDescWordLeft  *string `protobuf:"bytes,2,opt"`
	SignDescWordRight *string `protobuf:"bytes,3,opt"`
}

func (x *SignInStatusNotInfo) GetButtonWord() string {
	if x != nil && x.ButtonWord != nil {
		return *x.ButtonWord
	}
	return ""
}

func (x *SignInStatusNotInfo) GetSignDescWordLeft() string {
	if x != nil && x.SignDescWordLeft != nil {
		return *x.SignDescWordLeft
	}
	return ""
}

func (x *SignInStatusNotInfo) GetSignDescWordRight() string {
	if x != nil && x.SignDescWordRight != nil {
		return *x.SignDescWordRight
	}
	return ""
}

type SignInStatusYesterdayFirst struct {
	YesterdayFirstUid *string `protobuf:"bytes,1,opt"`
	YesterdayWord     *string `protobuf:"bytes,2,opt"`
	YesterdayNick     *string `protobuf:"bytes,3,opt"`
}

func (x *SignInStatusYesterdayFirst) GetYesterdayFirstUid() string {
	if x != nil && x.YesterdayFirstUid != nil {
		return *x.YesterdayFirstUid
	}
	return ""
}

func (x *SignInStatusYesterdayFirst) GetYesterdayWord() string {
	if x != nil && x.YesterdayWord != nil {
		return *x.YesterdayWord
	}
	return ""
}

func (x *SignInStatusYesterdayFirst) GetYesterdayNick() string {
	if x != nil && x.YesterdayNick != nil {
		return *x.YesterdayNick
	}
	return ""
}

type StDaySignedInfo struct {
	Uid             *string `protobuf:"bytes,1,opt"`
	UidGroupNick    *string `protobuf:"bytes,2,opt"`
	SignedTimeStamp *int64  `protobuf:"varint,3,opt"`
	SignInRank      *int32  `protobuf:"varint,4,opt"`
}

func (x *StDaySignedInfo) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *StDaySignedInfo) GetUidGroupNick() string {
	if x != nil && x.UidGroupNick != nil {
		return *x.UidGroupNick
	}
	return ""
}

func (x *StDaySignedInfo) GetSignedTimeStamp() int64 {
	if x != nil && x.SignedTimeStamp != nil {
		return *x.SignedTimeStamp
	}
	return 0
}

func (x *StDaySignedInfo) GetSignInRank() int32 {
	if x != nil && x.SignInRank != nil {
		return *x.SignInRank
	}
	return 0
}

type StDaySignedListReq struct {
	DayYmd  *string `protobuf:"bytes,1,opt"`
	Uid     *string `protobuf:"bytes,2,opt"`
	GroupId *string `protobuf:"bytes,3,opt"`
	Offset  *int32  `protobuf:"varint,4,opt"`
	Limit   *int32  `protobuf:"varint,5,opt"`
}

func (x *StDaySignedListReq) GetDayYmd() string {
	if x != nil && x.DayYmd != nil {
		return *x.DayYmd
	}
	return ""
}

func (x *StDaySignedListReq) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *StDaySignedListReq) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *StDaySignedListReq) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *StDaySignedListReq) GetLimit() int32 {
	if x != nil && x.Limit != nil {
		return *x.Limit
	}
	return 0
}

type StDaySignedListRsp struct {
	Ret  *DEB7Ret           `protobuf:"bytes,1,opt"`
	Page []*StDaySignedPage `protobuf:"bytes,2,rep"`
}

type StDaySignedPage struct {
	Infos  []*StDaySignedInfo `protobuf:"bytes,1,rep"`
	Offset *int32             `protobuf:"varint,2,opt"`
	Total  *int32             `protobuf:"varint,3,opt"`
}

func (x *StDaySignedPage) GetOffset() int32 {
	if x != nil && x.Offset != nil {
		return *x.Offset
	}
	return 0
}

func (x *StDaySignedPage) GetTotal() int32 {
	if x != nil && x.Total != nil {
		return *x.Total
	}
	return 0
}

type StKingSignedInfo struct {
	Uid             *string `protobuf:"bytes,1,opt"`
	GroupNick       *string `protobuf:"bytes,2,opt"`
	SignedTimeStamp *int64  `protobuf:"varint,3,opt"`
	SignedCount     *int32  `protobuf:"varint,4,opt"`
}

func (x *StKingSignedInfo) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *StKingSignedInfo) GetGroupNick() string {
	if x != nil && x.GroupNick != nil {
		return *x.GroupNick
	}
	return ""
}

func (x *StKingSignedInfo) GetSignedTimeStamp() int64 {
	if x != nil && x.SignedTimeStamp != nil {
		return *x.SignedTimeStamp
	}
	return 0
}

func (x *StKingSignedInfo) GetSignedCount() int32 {
	if x != nil && x.SignedCount != nil {
		return *x.SignedCount
	}
	return 0
}

type StKingSignedListReq struct {
	Uid     *string `protobuf:"bytes,1,opt"`
	GroupId *string `protobuf:"bytes,2,opt"`
}

func (x *StKingSignedListReq) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *StKingSignedListReq) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

type StKingSignedListRsp struct {
	Ret               *DEB7Ret            `protobuf:"bytes,1,opt"`
	YesterdayFirst    *StKingSignedInfo   `protobuf:"bytes,2,opt"`
	TopSignedTotal    []*StKingSignedInfo `protobuf:"bytes,3,rep"`
	TopSignedContinue []*StKingSignedInfo `protobuf:"bytes,4,rep"`
}

type StSignInRecordDaySigned struct {
	DaySignedRatio    *float32         `protobuf:"fixed32,1,opt"`
	DayTotalSignedUid *int32           `protobuf:"varint,2,opt"`
	DaySignedPage     *StDaySignedPage `protobuf:"bytes,3,opt"`
	DaySignedUrl      *string          `protobuf:"bytes,4,opt"`
}

func (x *StSignInRecordDaySigned) GetDaySignedRatio() float32 {
	if x != nil && x.DaySignedRatio != nil {
		return *x.DaySignedRatio
	}
	return 0
}

func (x *StSignInRecordDaySigned) GetDayTotalSignedUid() int32 {
	if x != nil && x.DayTotalSignedUid != nil {
		return *x.DayTotalSignedUid
	}
	return 0
}

func (x *StSignInRecordDaySigned) GetDaySignedUrl() string {
	if x != nil && x.DaySignedUrl != nil {
		return *x.DaySignedUrl
	}
	return ""
}

type StSignInRecordKing struct {
	YesterdayFirst    *StKingSignedInfo   `protobuf:"bytes,1,opt"`
	TopSignedTotal    []*StKingSignedInfo `protobuf:"bytes,2,rep"`
	TopSignedContinue []*StKingSignedInfo `protobuf:"bytes,3,rep"`
	KingUrl           *string             `protobuf:"bytes,4,opt"`
}

func (x *StSignInRecordKing) GetKingUrl() string {
	if x != nil && x.KingUrl != nil {
		return *x.KingUrl
	}
	return ""
}

type StSignInRecordReq struct {
	DayYmd  *string `protobuf:"bytes,1,opt"`
	Uid     *string `protobuf:"bytes,2,opt"`
	GroupId *string `protobuf:"bytes,3,opt"`
}

func (x *StSignInRecordReq) GetDayYmd() string {
	if x != nil && x.DayYmd != nil {
		return *x.DayYmd
	}
	return ""
}

func (x *StSignInRecordReq) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *StSignInRecordReq) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

type StSignInRecordRsp struct {
	Ret        *DEB7Ret                 `protobuf:"bytes,1,opt"`
	Base       *SignInStatusBase        `protobuf:"bytes,2,opt"`
	UserRecord *StSignInRecordUser      `protobuf:"bytes,3,opt"`
	DaySigned  *StSignInRecordDaySigned `protobuf:"bytes,4,opt"`
	KingRecord *StSignInRecordKing      `protobuf:"bytes,5,opt"`
	Level      *StViewGroupLevel        `protobuf:"bytes,6,opt"`
}

type StSignInRecordUser struct {
	TotalSignedDays         *int32   `protobuf:"varint,2,opt"`
	EarliestSignedTimeStamp *int64   `protobuf:"varint,3,opt"`
	ContinueSignedDays      *int64   `protobuf:"varint,4,opt"`
	HistorySignedDays       []string `protobuf:"bytes,5,rep"`
	GroupName               *string  `protobuf:"bytes,6,opt"`
}

func (x *StSignInRecordUser) GetTotalSignedDays() int32 {
	if x != nil && x.TotalSignedDays != nil {
		return *x.TotalSignedDays
	}
	return 0
}

func (x *StSignInRecordUser) GetEarliestSignedTimeStamp() int64 {
	if x != nil && x.EarliestSignedTimeStamp != nil {
		return *x.EarliestSignedTimeStamp
	}
	return 0
}

func (x *StSignInRecordUser) GetContinueSignedDays() int64 {
	if x != nil && x.ContinueSignedDays != nil {
		return *x.ContinueSignedDays
	}
	return 0
}

func (x *StSignInRecordUser) GetGroupName() string {
	if x != nil && x.GroupName != nil {
		return *x.GroupName
	}
	return ""
}

type StSignInStatusReq struct {
	Uid           *string `protobuf:"bytes,1,opt"`
	GroupId       *string `protobuf:"bytes,2,opt"`
	Scene         *uint32 `protobuf:"varint,3,opt"`
	ClientVersion *string `protobuf:"bytes,4,opt"`
}

func (x *StSignInStatusReq) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *StSignInStatusReq) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *StSignInStatusReq) GetScene() uint32 {
	if x != nil && x.Scene != nil {
		return *x.Scene
	}
	return 0
}

func (x *StSignInStatusReq) GetClientVersion() string {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return ""
}

type StSignInStatusRsp struct {
	Ret           *DEB7Ret                    `protobuf:"bytes,1,opt"`
	Base          *SignInStatusBase           `protobuf:"bytes,2,opt"`
	Yesterday     *SignInStatusYesterdayFirst `protobuf:"bytes,3,opt"`
	NotInfo       *SignInStatusNotInfo        `protobuf:"bytes,4,opt"`
	DoneInfo      *SignInStatusDoneInfo       `protobuf:"bytes,5,opt"`
	GroupScore    *SignInStatusGroupScore     `protobuf:"bytes,6,opt"`
	MantleUrl     *string                     `protobuf:"bytes,7,opt"`
	BackgroundUrl *string                     `protobuf:"bytes,8,opt"`
}

func (x *StSignInStatusRsp) GetMantleUrl() string {
	if x != nil && x.MantleUrl != nil {
		return *x.MantleUrl
	}
	return ""
}

func (x *StSignInStatusRsp) GetBackgroundUrl() string {
	if x != nil && x.BackgroundUrl != nil {
		return *x.BackgroundUrl
	}
	return ""
}

type StSignInWriteReq struct {
	Uid           *string `protobuf:"bytes,1,opt"`
	GroupId       *string `protobuf:"bytes,2,opt"`
	ClientVersion *string `protobuf:"bytes,3,opt"`
}

func (x *StSignInWriteReq) GetUid() string {
	if x != nil && x.Uid != nil {
		return *x.Uid
	}
	return ""
}

func (x *StSignInWriteReq) GetGroupId() string {
	if x != nil && x.GroupId != nil {
		return *x.GroupId
	}
	return ""
}

func (x *StSignInWriteReq) GetClientVersion() string {
	if x != nil && x.ClientVersion != nil {
		return *x.ClientVersion
	}
	return ""
}

type StSignInWriteRsp struct {
	Ret        *DEB7Ret                `protobuf:"bytes,1,opt"`
	DoneInfo   *SignInStatusDoneInfo   `protobuf:"bytes,2,opt"`
	GroupScore *SignInStatusGroupScore `protobuf:"bytes,3,opt"`
}

type StViewGroupLevel struct {
	Title *string `protobuf:"bytes,1,opt"`
	Url   *string `protobuf:"bytes,2,opt"`
}

func (x *StViewGroupLevel) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *StViewGroupLevel) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}
