// Code generated by protoc-gen-golite. DO NOT EDIT.
// source: pb/msgtype0x210/subMsgType0x27.proto

package msgtype0x210

type AddGroup struct {
	Groupid   *uint32 `protobuf:"varint,1,opt"`
	Sortid    *uint32 `protobuf:"varint,2,opt"`
	Groupname []byte  `protobuf:"bytes,3,opt"`
}

func (x *AddGroup) GetGroupid() uint32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

func (x *AddGroup) GetSortid() uint32 {
	if x != nil && x.Sortid != nil {
		return *x.Sortid
	}
	return 0
}

func (x *AddGroup) GetGroupname() []byte {
	if x != nil {
		return x.Groupname
	}
	return nil
}

type AppointmentNotify struct {
	FromUin         *uint64 `protobuf:"varint,1,opt"`
	AppointId       *string `protobuf:"bytes,2,opt"`
	Notifytype      *uint32 `protobuf:"varint,3,opt"`
	TipsContent     *string `protobuf:"bytes,4,opt"`
	UnreadCount     *uint32 `protobuf:"varint,5,opt"`
	JoinWording     *string `protobuf:"bytes,6,opt"`
	ViewWording     *string `protobuf:"bytes,7,opt"`
	Sig             []byte  `protobuf:"bytes,8,opt"`
	EventInfo       []byte  `protobuf:"bytes,9,opt"`
	NearbyEventInfo []byte  `protobuf:"bytes,10,opt"`
	FeedEventInfo   []byte  `protobuf:"bytes,11,opt"`
}

func (x *AppointmentNotify) GetFromUin() uint64 {
	if x != nil && x.FromUin != nil {
		return *x.FromUin
	}
	return 0
}

func (x *AppointmentNotify) GetAppointId() string {
	if x != nil && x.AppointId != nil {
		return *x.AppointId
	}
	return ""
}

func (x *AppointmentNotify) GetNotifytype() uint32 {
	if x != nil && x.Notifytype != nil {
		return *x.Notifytype
	}
	return 0
}

func (x *AppointmentNotify) GetTipsContent() string {
	if x != nil && x.TipsContent != nil {
		return *x.TipsContent
	}
	return ""
}

func (x *AppointmentNotify) GetUnreadCount() uint32 {
	if x != nil && x.UnreadCount != nil {
		return *x.UnreadCount
	}
	return 0
}

func (x *AppointmentNotify) GetJoinWording() string {
	if x != nil && x.JoinWording != nil {
		return *x.JoinWording
	}
	return ""
}

func (x *AppointmentNotify) GetViewWording() string {
	if x != nil && x.ViewWording != nil {
		return *x.ViewWording
	}
	return ""
}

func (x *AppointmentNotify) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *AppointmentNotify) GetEventInfo() []byte {
	if x != nil {
		return x.EventInfo
	}
	return nil
}

func (x *AppointmentNotify) GetNearbyEventInfo() []byte {
	if x != nil {
		return x.NearbyEventInfo
	}
	return nil
}

func (x *AppointmentNotify) GetFeedEventInfo() []byte {
	if x != nil {
		return x.FeedEventInfo
	}
	return nil
}

type BinaryMsg struct {
	OpType  *uint32 `protobuf:"varint,1,opt"`
	OpValue []byte  `protobuf:"bytes,2,opt"`
}

func (x *BinaryMsg) GetOpType() uint32 {
	if x != nil && x.OpType != nil {
		return *x.OpType
	}
	return 0
}

func (x *BinaryMsg) GetOpValue() []byte {
	if x != nil {
		return x.OpValue
	}
	return nil
}

type ChatMatchInfo struct {
	Sig              []byte  `protobuf:"bytes,1,opt"`
	Uin              *uint64 `protobuf:"varint,2,opt"`
	MatchUin         *uint64 `protobuf:"varint,3,opt"`
	TipsWording      []byte  `protobuf:"bytes,4,opt"`
	LeftChatTime     *uint32 `protobuf:"varint,5,opt"`
	TimeStamp        *uint64 `protobuf:"varint,6,opt"`
	MatchExpiredTime *uint32 `protobuf:"varint,7,opt"`
	C2CExpiredTime   *uint32 `protobuf:"varint,8,opt"`
	MatchCount       *uint32 `protobuf:"varint,9,opt"`
	Nick             []byte  `protobuf:"bytes,10,opt"`
}

func (x *ChatMatchInfo) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *ChatMatchInfo) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *ChatMatchInfo) GetMatchUin() uint64 {
	if x != nil && x.MatchUin != nil {
		return *x.MatchUin
	}
	return 0
}

func (x *ChatMatchInfo) GetTipsWording() []byte {
	if x != nil {
		return x.TipsWording
	}
	return nil
}

func (x *ChatMatchInfo) GetLeftChatTime() uint32 {
	if x != nil && x.LeftChatTime != nil {
		return *x.LeftChatTime
	}
	return 0
}

func (x *ChatMatchInfo) GetTimeStamp() uint64 {
	if x != nil && x.TimeStamp != nil {
		return *x.TimeStamp
	}
	return 0
}

func (x *ChatMatchInfo) GetMatchExpiredTime() uint32 {
	if x != nil && x.MatchExpiredTime != nil {
		return *x.MatchExpiredTime
	}
	return 0
}

func (x *ChatMatchInfo) GetC2CExpiredTime() uint32 {
	if x != nil && x.C2CExpiredTime != nil {
		return *x.C2CExpiredTime
	}
	return 0
}

func (x *ChatMatchInfo) GetMatchCount() uint32 {
	if x != nil && x.MatchCount != nil {
		return *x.MatchCount
	}
	return 0
}

func (x *ChatMatchInfo) GetNick() []byte {
	if x != nil {
		return x.Nick
	}
	return nil
}

type ConfMsgRoamFlag struct {
	Confid    *uint64 `protobuf:"varint,1,opt"`
	Flag      *uint32 `protobuf:"varint,2,opt"`
	Timestamp *uint64 `protobuf:"varint,3,opt"`
}

func (x *ConfMsgRoamFlag) GetConfid() uint64 {
	if x != nil && x.Confid != nil {
		return *x.Confid
	}
	return 0
}

func (x *ConfMsgRoamFlag) GetFlag() uint32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

func (x *ConfMsgRoamFlag) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type DaRenNotify struct {
	Uin             *uint64 `protobuf:"varint,1,opt"`
	LoginDays       *uint32 `protobuf:"varint,2,opt"`
	Days            *uint32 `protobuf:"varint,3,opt"`
	IsYestodayLogin *uint32 `protobuf:"varint,4,opt"`
	IsTodayLogin    *uint32 `protobuf:"varint,5,opt"`
}

func (x *DaRenNotify) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *DaRenNotify) GetLoginDays() uint32 {
	if x != nil && x.LoginDays != nil {
		return *x.LoginDays
	}
	return 0
}

func (x *DaRenNotify) GetDays() uint32 {
	if x != nil && x.Days != nil {
		return *x.Days
	}
	return 0
}

func (x *DaRenNotify) GetIsYestodayLogin() uint32 {
	if x != nil && x.IsYestodayLogin != nil {
		return *x.IsYestodayLogin
	}
	return 0
}

func (x *DaRenNotify) GetIsTodayLogin() uint32 {
	if x != nil && x.IsTodayLogin != nil {
		return *x.IsTodayLogin
	}
	return 0
}

type DelFriend struct {
	Uins []uint64 `protobuf:"varint,1,rep"`
}

func (x *DelFriend) GetUins() []uint64 {
	if x != nil {
		return x.Uins
	}
	return nil
}

type DelGroup struct {
	Groupid *uint32 `protobuf:"varint,1,opt"`
}

func (x *DelGroup) GetGroupid() uint32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

type FanpaiziNotify struct {
	FromUin     *uint64 `protobuf:"varint,1,opt"`
	FromNick    *string `protobuf:"bytes,2,opt"`
	TipsContent []byte  `protobuf:"bytes,3,opt"`
	Sig         []byte  `protobuf:"bytes,4,opt"`
}

func (x *FanpaiziNotify) GetFromUin() uint64 {
	if x != nil && x.FromUin != nil {
		return *x.FromUin
	}
	return 0
}

func (x *FanpaiziNotify) GetFromNick() string {
	if x != nil && x.FromNick != nil {
		return *x.FromNick
	}
	return ""
}

func (x *FanpaiziNotify) GetTipsContent() []byte {
	if x != nil {
		return x.TipsContent
	}
	return nil
}

func (x *FanpaiziNotify) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

type ForwardBody struct {
	NotifyType                  *uint32                      `protobuf:"varint,1,opt"`
	OpType                      *uint32                      `protobuf:"varint,2,opt"`
	AddGroup                    *AddGroup                    `protobuf:"bytes,3,opt"`
	DelGroup                    *DelGroup                    `protobuf:"bytes,4,opt"`
	ModGroupName                *ModGroupName                `protobuf:"bytes,5,opt"`
	ModGroupSort                *ModGroupSort                `protobuf:"bytes,6,opt"`
	ModFriendGroup              *ModFriendGroup              `protobuf:"bytes,7,opt"`
	ModProfile                  *ModProfile                  `protobuf:"bytes,8,opt"`
	ModFriendRemark             *ModFriendRemark             `protobuf:"bytes,9,opt"`
	ModLongNick                 *ModLongNick                 `protobuf:"bytes,10,opt"`
	ModCustomFace               *ModCustomFace               `protobuf:"bytes,11,opt"`
	ModGroupProfile             *ModGroupProfile             `protobuf:"bytes,12,opt"`
	ModGroupMemberProfile       *ModGroupMemberProfile       `protobuf:"bytes,13,opt"`
	DelFriend                   *DelFriend                   `protobuf:"bytes,14,opt"`
	RoamPriv                    *ModFrdRoamPriv              `protobuf:"bytes,15,opt"`
	GrpMsgRoamFlag              *GrpMsgRoamFlag              `protobuf:"bytes,16,opt"`
	ConfMsgRoamFlag             *ConfMsgRoamFlag             `protobuf:"bytes,17,opt"`
	ModRichLongNick             *ModLongNick                 `protobuf:"bytes,18,opt"`
	BinPkg                      *BinaryMsg                   `protobuf:"bytes,19,opt"`
	ModFriendRings              *ModSnsGeneralInfo           `protobuf:"bytes,20,opt"`
	ModConfProfile              *ModConfProfile              `protobuf:"bytes,21,opt"`
	ModFriendFlag               *SnsUpdateFlag               `protobuf:"bytes,22,opt"`
	AppointmentNotify           *AppointmentNotify           `protobuf:"bytes,23,opt"`
	DarenNotify                 *DaRenNotify                 `protobuf:"bytes,25,opt"`
	NewComeinUserNotify         *NewComeinUserNotify         `protobuf:"bytes,26,opt"`
	PushSearchDev               *PushSearchDev               `protobuf:"bytes,200,opt"`
	PushReportDev               *PushReportDev               `protobuf:"bytes,201,opt"`
	QqPayPush                   *QQPayPush                   `protobuf:"bytes,202,opt"`
	RedpointInfo                []byte                       `protobuf:"bytes,203,opt"`
	HotFriendNotify             *HotFriendNotify             `protobuf:"bytes,204,opt"`
	PraiseRankNotify            *PraiseRankNotify            `protobuf:"bytes,205,opt"`
	CampusNotify                *MQQCampusNotify             `protobuf:"bytes,210,opt"`
	ModRichLongNickEx           *ModLongNick                 `protobuf:"bytes,211,opt"`
	ChatMatchInfo               *ChatMatchInfo               `protobuf:"bytes,212,opt"`
	FrdCustomOnlineStatusChange *FrdCustomOnlineStatusChange `protobuf:"bytes,214,opt"`
	FanpanziNotify              *FanpaiziNotify              `protobuf:"bytes,2000,opt"`
}

func (x *ForwardBody) GetNotifyType() uint32 {
	if x != nil && x.NotifyType != nil {
		return *x.NotifyType
	}
	return 0
}

func (x *ForwardBody) GetOpType() uint32 {
	if x != nil && x.OpType != nil {
		return *x.OpType
	}
	return 0
}

func (x *ForwardBody) GetAddGroup() *AddGroup {
	if x != nil {
		return x.AddGroup
	}
	return nil
}

func (x *ForwardBody) GetDelGroup() *DelGroup {
	if x != nil {
		return x.DelGroup
	}
	return nil
}

func (x *ForwardBody) GetModGroupName() *ModGroupName {
	if x != nil {
		return x.ModGroupName
	}
	return nil
}

func (x *ForwardBody) GetModGroupSort() *ModGroupSort {
	if x != nil {
		return x.ModGroupSort
	}
	return nil
}

func (x *ForwardBody) GetModFriendGroup() *ModFriendGroup {
	if x != nil {
		return x.ModFriendGroup
	}
	return nil
}

func (x *ForwardBody) GetModProfile() *ModProfile {
	if x != nil {
		return x.ModProfile
	}
	return nil
}

func (x *ForwardBody) GetModFriendRemark() *ModFriendRemark {
	if x != nil {
		return x.ModFriendRemark
	}
	return nil
}

func (x *ForwardBody) GetModLongNick() *ModLongNick {
	if x != nil {
		return x.ModLongNick
	}
	return nil
}

func (x *ForwardBody) GetModCustomFace() *ModCustomFace {
	if x != nil {
		return x.ModCustomFace
	}
	return nil
}

func (x *ForwardBody) GetModGroupProfile() *ModGroupProfile {
	if x != nil {
		return x.ModGroupProfile
	}
	return nil
}

func (x *ForwardBody) GetModGroupMemberProfile() *ModGroupMemberProfile {
	if x != nil {
		return x.ModGroupMemberProfile
	}
	return nil
}

func (x *ForwardBody) GetDelFriend() *DelFriend {
	if x != nil {
		return x.DelFriend
	}
	return nil
}

func (x *ForwardBody) GetRoamPriv() *ModFrdRoamPriv {
	if x != nil {
		return x.RoamPriv
	}
	return nil
}

func (x *ForwardBody) GetGrpMsgRoamFlag() *GrpMsgRoamFlag {
	if x != nil {
		return x.GrpMsgRoamFlag
	}
	return nil
}

func (x *ForwardBody) GetConfMsgRoamFlag() *ConfMsgRoamFlag {
	if x != nil {
		return x.ConfMsgRoamFlag
	}
	return nil
}

func (x *ForwardBody) GetModRichLongNick() *ModLongNick {
	if x != nil {
		return x.ModRichLongNick
	}
	return nil
}

func (x *ForwardBody) GetBinPkg() *BinaryMsg {
	if x != nil {
		return x.BinPkg
	}
	return nil
}

func (x *ForwardBody) GetModFriendRings() *ModSnsGeneralInfo {
	if x != nil {
		return x.ModFriendRings
	}
	return nil
}

func (x *ForwardBody) GetModConfProfile() *ModConfProfile {
	if x != nil {
		return x.ModConfProfile
	}
	return nil
}

func (x *ForwardBody) GetModFriendFlag() *SnsUpdateFlag {
	if x != nil {
		return x.ModFriendFlag
	}
	return nil
}

func (x *ForwardBody) GetAppointmentNotify() *AppointmentNotify {
	if x != nil {
		return x.AppointmentNotify
	}
	return nil
}

func (x *ForwardBody) GetDarenNotify() *DaRenNotify {
	if x != nil {
		return x.DarenNotify
	}
	return nil
}

func (x *ForwardBody) GetNewComeinUserNotify() *NewComeinUserNotify {
	if x != nil {
		return x.NewComeinUserNotify
	}
	return nil
}

func (x *ForwardBody) GetPushSearchDev() *PushSearchDev {
	if x != nil {
		return x.PushSearchDev
	}
	return nil
}

func (x *ForwardBody) GetPushReportDev() *PushReportDev {
	if x != nil {
		return x.PushReportDev
	}
	return nil
}

func (x *ForwardBody) GetQqPayPush() *QQPayPush {
	if x != nil {
		return x.QqPayPush
	}
	return nil
}

func (x *ForwardBody) GetRedpointInfo() []byte {
	if x != nil {
		return x.RedpointInfo
	}
	return nil
}

func (x *ForwardBody) GetHotFriendNotify() *HotFriendNotify {
	if x != nil {
		return x.HotFriendNotify
	}
	return nil
}

func (x *ForwardBody) GetPraiseRankNotify() *PraiseRankNotify {
	if x != nil {
		return x.PraiseRankNotify
	}
	return nil
}

func (x *ForwardBody) GetCampusNotify() *MQQCampusNotify {
	if x != nil {
		return x.CampusNotify
	}
	return nil
}

func (x *ForwardBody) GetModRichLongNickEx() *ModLongNick {
	if x != nil {
		return x.ModRichLongNickEx
	}
	return nil
}

func (x *ForwardBody) GetChatMatchInfo() *ChatMatchInfo {
	if x != nil {
		return x.ChatMatchInfo
	}
	return nil
}

func (x *ForwardBody) GetFrdCustomOnlineStatusChange() *FrdCustomOnlineStatusChange {
	if x != nil {
		return x.FrdCustomOnlineStatusChange
	}
	return nil
}

func (x *ForwardBody) GetFanpanziNotify() *FanpaiziNotify {
	if x != nil {
		return x.FanpanziNotify
	}
	return nil
}

type FrdCustomOnlineStatusChange struct {
	Uin *uint64 `protobuf:"varint,1,opt"`
}

func (x *FrdCustomOnlineStatusChange) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

type FriendGroup struct {
	Fuin       *uint64  `protobuf:"varint,1,opt"`
	OldGroupId []uint32 `protobuf:"varint,2,rep"`
	NewGroupId []uint32 `protobuf:"varint,3,rep"`
}

func (x *FriendGroup) GetFuin() uint64 {
	if x != nil && x.Fuin != nil {
		return *x.Fuin
	}
	return 0
}

func (x *FriendGroup) GetOldGroupId() []uint32 {
	if x != nil {
		return x.OldGroupId
	}
	return nil
}

func (x *FriendGroup) GetNewGroupId() []uint32 {
	if x != nil {
		return x.NewGroupId
	}
	return nil
}

type FriendRemark struct {
	Type      *uint32 `protobuf:"varint,1,opt"`
	Fuin      *uint64 `protobuf:"varint,2,opt"`
	RmkName   []byte  `protobuf:"bytes,3,opt"`
	GroupCode *uint64 `protobuf:"varint,4,opt"`
}

func (x *FriendRemark) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *FriendRemark) GetFuin() uint64 {
	if x != nil && x.Fuin != nil {
		return *x.Fuin
	}
	return 0
}

func (x *FriendRemark) GetRmkName() []byte {
	if x != nil {
		return x.RmkName
	}
	return nil
}

func (x *FriendRemark) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

type GPS struct {
	Lat  *int32 `protobuf:"varint,1,opt"`
	Lon  *int32 `protobuf:"varint,2,opt"`
	Alt  *int32 `protobuf:"varint,3,opt"`
	Type *int32 `protobuf:"varint,4,opt"`
}

func (x *GPS) GetLat() int32 {
	if x != nil && x.Lat != nil {
		return *x.Lat
	}
	return 0
}

func (x *GPS) GetLon() int32 {
	if x != nil && x.Lon != nil {
		return *x.Lon
	}
	return 0
}

func (x *GPS) GetAlt() int32 {
	if x != nil && x.Alt != nil {
		return *x.Alt
	}
	return 0
}

func (x *GPS) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

type GroupMemberProfileInfo struct {
	Field *uint32 `protobuf:"varint,1,opt"`
	Value []byte  `protobuf:"bytes,2,opt"`
}

func (x *GroupMemberProfileInfo) GetField() uint32 {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return 0
}

func (x *GroupMemberProfileInfo) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type GroupProfileInfo struct {
	Field *uint32 `protobuf:"varint,1,opt"`
	Value []byte  `protobuf:"bytes,2,opt"`
}

func (x *GroupProfileInfo) GetField() uint32 {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return 0
}

func (x *GroupProfileInfo) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type GroupSort struct {
	Groupid *uint32 `protobuf:"varint,1,opt"`
	Sortid  *uint32 `protobuf:"varint,2,opt"`
}

func (x *GroupSort) GetGroupid() uint32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

func (x *GroupSort) GetSortid() uint32 {
	if x != nil && x.Sortid != nil {
		return *x.Sortid
	}
	return 0
}

type GrpMsgRoamFlag struct {
	Groupcode *uint64 `protobuf:"varint,1,opt"`
	Flag      *uint32 `protobuf:"varint,2,opt"`
	Timestamp *uint64 `protobuf:"varint,3,opt"`
}

func (x *GrpMsgRoamFlag) GetGroupcode() uint64 {
	if x != nil && x.Groupcode != nil {
		return *x.Groupcode
	}
	return 0
}

func (x *GrpMsgRoamFlag) GetFlag() uint32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}

func (x *GrpMsgRoamFlag) GetTimestamp() uint64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

type HotFriendNotify struct {
	DstUin         *uint64 `protobuf:"varint,1,opt"`
	PraiseHotLevel *uint32 `protobuf:"varint,2,opt"`
	ChatHotLevel   *uint32 `protobuf:"varint,3,opt"`
	PraiseHotDays  *uint32 `protobuf:"varint,4,opt"`
	ChatHotDays    *uint32 `protobuf:"varint,5,opt"`
	CloseLevel     *uint32 `protobuf:"varint,6,opt"`
	CloseDays      *uint32 `protobuf:"varint,7,opt"`
	PraiseFlag     *uint32 `protobuf:"varint,8,opt"`
	ChatFlag       *uint32 `protobuf:"varint,9,opt"`
	CloseFlag      *uint32 `protobuf:"varint,10,opt"`
	NotifyTime     *uint64 `protobuf:"varint,11,opt"`
	LastPraiseTime *uint64 `protobuf:"varint,12,opt"`
	LastChatTime   *uint64 `protobuf:"varint,13,opt"`
	QzoneHotLevel  *uint32 `protobuf:"varint,14,opt"`
	QzoneHotDays   *uint32 `protobuf:"varint,15,opt"`
	QzoneFlag      *uint32 `protobuf:"varint,16,opt"`
	LastQzoneTime  *uint64 `protobuf:"varint,17,opt"`
}

func (x *HotFriendNotify) GetDstUin() uint64 {
	if x != nil && x.DstUin != nil {
		return *x.DstUin
	}
	return 0
}

func (x *HotFriendNotify) GetPraiseHotLevel() uint32 {
	if x != nil && x.PraiseHotLevel != nil {
		return *x.PraiseHotLevel
	}
	return 0
}

func (x *HotFriendNotify) GetChatHotLevel() uint32 {
	if x != nil && x.ChatHotLevel != nil {
		return *x.ChatHotLevel
	}
	return 0
}

func (x *HotFriendNotify) GetPraiseHotDays() uint32 {
	if x != nil && x.PraiseHotDays != nil {
		return *x.PraiseHotDays
	}
	return 0
}

func (x *HotFriendNotify) GetChatHotDays() uint32 {
	if x != nil && x.ChatHotDays != nil {
		return *x.ChatHotDays
	}
	return 0
}

func (x *HotFriendNotify) GetCloseLevel() uint32 {
	if x != nil && x.CloseLevel != nil {
		return *x.CloseLevel
	}
	return 0
}

func (x *HotFriendNotify) GetCloseDays() uint32 {
	if x != nil && x.CloseDays != nil {
		return *x.CloseDays
	}
	return 0
}

func (x *HotFriendNotify) GetPraiseFlag() uint32 {
	if x != nil && x.PraiseFlag != nil {
		return *x.PraiseFlag
	}
	return 0
}

func (x *HotFriendNotify) GetChatFlag() uint32 {
	if x != nil && x.ChatFlag != nil {
		return *x.ChatFlag
	}
	return 0
}

func (x *HotFriendNotify) GetCloseFlag() uint32 {
	if x != nil && x.CloseFlag != nil {
		return *x.CloseFlag
	}
	return 0
}

func (x *HotFriendNotify) GetNotifyTime() uint64 {
	if x != nil && x.NotifyTime != nil {
		return *x.NotifyTime
	}
	return 0
}

func (x *HotFriendNotify) GetLastPraiseTime() uint64 {
	if x != nil && x.LastPraiseTime != nil {
		return *x.LastPraiseTime
	}
	return 0
}

func (x *HotFriendNotify) GetLastChatTime() uint64 {
	if x != nil && x.LastChatTime != nil {
		return *x.LastChatTime
	}
	return 0
}

func (x *HotFriendNotify) GetQzoneHotLevel() uint32 {
	if x != nil && x.QzoneHotLevel != nil {
		return *x.QzoneHotLevel
	}
	return 0
}

func (x *HotFriendNotify) GetQzoneHotDays() uint32 {
	if x != nil && x.QzoneHotDays != nil {
		return *x.QzoneHotDays
	}
	return 0
}

func (x *HotFriendNotify) GetQzoneFlag() uint32 {
	if x != nil && x.QzoneFlag != nil {
		return *x.QzoneFlag
	}
	return 0
}

func (x *HotFriendNotify) GetLastQzoneTime() uint64 {
	if x != nil && x.LastQzoneTime != nil {
		return *x.LastQzoneTime
	}
	return 0
}

type MQQCampusNotify struct {
	FromUin *uint64 `protobuf:"varint,1,opt"`
	Wording *string `protobuf:"bytes,2,opt"`
	Target  *string `protobuf:"bytes,3,opt"`
	Type    *uint32 `protobuf:"varint,4,opt"`
	Source  *string `protobuf:"bytes,5,opt"`
}

func (x *MQQCampusNotify) GetFromUin() uint64 {
	if x != nil && x.FromUin != nil {
		return *x.FromUin
	}
	return 0
}

func (x *MQQCampusNotify) GetWording() string {
	if x != nil && x.Wording != nil {
		return *x.Wording
	}
	return ""
}

func (x *MQQCampusNotify) GetTarget() string {
	if x != nil && x.Target != nil {
		return *x.Target
	}
	return ""
}

func (x *MQQCampusNotify) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *MQQCampusNotify) GetSource() string {
	if x != nil && x.Source != nil {
		return *x.Source
	}
	return ""
}

type ModConfProfile struct {
	Uin          *uint64        `protobuf:"varint,1,opt"`
	ConfUin      *uint32        `protobuf:"varint,2,opt"`
	ProfileInfos []*ProfileInfo `protobuf:"bytes,3,rep"`
}

func (x *ModConfProfile) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *ModConfProfile) GetConfUin() uint32 {
	if x != nil && x.ConfUin != nil {
		return *x.ConfUin
	}
	return 0
}

func (x *ModConfProfile) GetProfileInfos() []*ProfileInfo {
	if x != nil {
		return x.ProfileInfos
	}
	return nil
}

type ModCustomFace struct {
	Type      *uint32 `protobuf:"varint,1,opt"`
	Uin       *uint64 `protobuf:"varint,2,opt"`
	GroupCode *uint64 `protobuf:"varint,3,opt"`
	CmdUin    *uint64 `protobuf:"varint,4,opt"`
}

func (x *ModCustomFace) GetType() uint32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *ModCustomFace) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *ModCustomFace) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *ModCustomFace) GetCmdUin() uint64 {
	if x != nil && x.CmdUin != nil {
		return *x.CmdUin
	}
	return 0
}

type ModFrdRoamPriv struct {
	RoamPriv []*OneRoamPriv `protobuf:"bytes,1,rep"`
}

func (x *ModFrdRoamPriv) GetRoamPriv() []*OneRoamPriv {
	if x != nil {
		return x.RoamPriv
	}
	return nil
}

type ModFriendGroup struct {
	FrdGroup []*FriendGroup `protobuf:"bytes,1,rep"`
}

func (x *ModFriendGroup) GetFrdGroup() []*FriendGroup {
	if x != nil {
		return x.FrdGroup
	}
	return nil
}

type ModFriendRemark struct {
	FrdRmk []*FriendRemark `protobuf:"bytes,1,rep"`
}

func (x *ModFriendRemark) GetFrdRmk() []*FriendRemark {
	if x != nil {
		return x.FrdRmk
	}
	return nil
}

type ModGroupMemberProfile struct {
	GroupUin                *uint64                   `protobuf:"varint,1,opt"`
	Uin                     *uint64                   `protobuf:"varint,2,opt"`
	GroupMemberProfileInfos []*GroupMemberProfileInfo `protobuf:"bytes,3,rep"`
	GroupCode               *uint64                   `protobuf:"varint,4,opt"`
}

func (x *ModGroupMemberProfile) GetGroupUin() uint64 {
	if x != nil && x.GroupUin != nil {
		return *x.GroupUin
	}
	return 0
}

func (x *ModGroupMemberProfile) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *ModGroupMemberProfile) GetGroupMemberProfileInfos() []*GroupMemberProfileInfo {
	if x != nil {
		return x.GroupMemberProfileInfos
	}
	return nil
}

func (x *ModGroupMemberProfile) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

type ModGroupName struct {
	Groupid   *uint32 `protobuf:"varint,1,opt"`
	Groupname []byte  `protobuf:"bytes,2,opt"`
}

func (x *ModGroupName) GetGroupid() uint32 {
	if x != nil && x.Groupid != nil {
		return *x.Groupid
	}
	return 0
}

func (x *ModGroupName) GetGroupname() []byte {
	if x != nil {
		return x.Groupname
	}
	return nil
}

type ModGroupProfile struct {
	GroupUin          *uint64             `protobuf:"varint,1,opt"`
	GroupProfileInfos []*GroupProfileInfo `protobuf:"bytes,2,rep"`
	GroupCode         *uint64             `protobuf:"varint,3,opt"`
	CmdUin            *uint64             `protobuf:"varint,4,opt"`
}

func (x *ModGroupProfile) GetGroupUin() uint64 {
	if x != nil && x.GroupUin != nil {
		return *x.GroupUin
	}
	return 0
}

func (x *ModGroupProfile) GetGroupProfileInfos() []*GroupProfileInfo {
	if x != nil {
		return x.GroupProfileInfos
	}
	return nil
}

func (x *ModGroupProfile) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *ModGroupProfile) GetCmdUin() uint64 {
	if x != nil && x.CmdUin != nil {
		return *x.CmdUin
	}
	return 0
}

type ModGroupSort struct {
	Groupsort []*GroupSort `protobuf:"bytes,1,rep"`
}

func (x *ModGroupSort) GetGroupsort() []*GroupSort {
	if x != nil {
		return x.Groupsort
	}
	return nil
}

type ModLongNick struct {
	Uin   *uint64 `protobuf:"varint,1,opt"`
	Value []byte  `protobuf:"bytes,2,opt"`
}

func (x *ModLongNick) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *ModLongNick) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type ModProfile struct {
	Uin          *uint64        `protobuf:"varint,1,opt"`
	ProfileInfos []*ProfileInfo `protobuf:"bytes,2,rep"`
}

func (x *ModProfile) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *ModProfile) GetProfileInfos() []*ProfileInfo {
	if x != nil {
		return x.ProfileInfos
	}
	return nil
}

type ModSnsGeneralInfo struct {
	SnsGeneralInfos []*SnsUpateBuffer `protobuf:"bytes,1,rep"`
}

func (x *ModSnsGeneralInfo) GetSnsGeneralInfos() []*SnsUpateBuffer {
	if x != nil {
		return x.SnsGeneralInfos
	}
	return nil
}

type SubMsg0X27Body struct {
	ModInfos []*ForwardBody `protobuf:"bytes,1,rep"`
}

func (x *SubMsg0X27Body) GetModInfos() []*ForwardBody {
	if x != nil {
		return x.ModInfos
	}
	return nil
}

type NewComeinUser struct {
	Uin    *uint64 `protobuf:"varint,1,opt"`
	IsFrd  *uint32 `protobuf:"varint,2,opt"`
	Remark []byte  `protobuf:"bytes,3,opt"`
	Nick   []byte  `protobuf:"bytes,4,opt"`
}

func (x *NewComeinUser) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *NewComeinUser) GetIsFrd() uint32 {
	if x != nil && x.IsFrd != nil {
		return *x.IsFrd
	}
	return 0
}

func (x *NewComeinUser) GetRemark() []byte {
	if x != nil {
		return x.Remark
	}
	return nil
}

func (x *NewComeinUser) GetNick() []byte {
	if x != nil {
		return x.Nick
	}
	return nil
}

type NewComeinUserNotify struct {
	MsgType       *uint32        `protobuf:"varint,1,opt"`
	OngNotify     *bool          `protobuf:"varint,2,opt"`
	PushTime      *uint32        `protobuf:"varint,3,opt"`
	NewComeinUser *NewComeinUser `protobuf:"bytes,4,opt"`
	NewGroup      *NewGroup      `protobuf:"bytes,5,opt"`
	NewGroupUser  *NewGroupUser  `protobuf:"bytes,6,opt"`
}

func (x *NewComeinUserNotify) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *NewComeinUserNotify) GetOngNotify() bool {
	if x != nil && x.OngNotify != nil {
		return *x.OngNotify
	}
	return false
}

func (x *NewComeinUserNotify) GetPushTime() uint32 {
	if x != nil && x.PushTime != nil {
		return *x.PushTime
	}
	return 0
}

func (x *NewComeinUserNotify) GetNewComeinUser() *NewComeinUser {
	if x != nil {
		return x.NewComeinUser
	}
	return nil
}

func (x *NewComeinUserNotify) GetNewGroup() *NewGroup {
	if x != nil {
		return x.NewGroup
	}
	return nil
}

func (x *NewComeinUserNotify) GetNewGroupUser() *NewGroupUser {
	if x != nil {
		return x.NewGroupUser
	}
	return nil
}

type NewGroup struct {
	GroupCode *uint64 `protobuf:"varint,1,opt"`
	GroupName []byte  `protobuf:"bytes,2,opt"`
	OwnerUin  *uint64 `protobuf:"varint,3,opt"`
	OwnerNick []byte  `protobuf:"bytes,4,opt"`
	Distance  []byte  `protobuf:"bytes,5,opt"`
}

func (x *NewGroup) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *NewGroup) GetGroupName() []byte {
	if x != nil {
		return x.GroupName
	}
	return nil
}

func (x *NewGroup) GetOwnerUin() uint64 {
	if x != nil && x.OwnerUin != nil {
		return *x.OwnerUin
	}
	return 0
}

func (x *NewGroup) GetOwnerNick() []byte {
	if x != nil {
		return x.OwnerNick
	}
	return nil
}

func (x *NewGroup) GetDistance() []byte {
	if x != nil {
		return x.Distance
	}
	return nil
}

type NewGroupUser struct {
	Uin      *uint64 `protobuf:"varint,1,opt"`
	Sex      *int32  `protobuf:"varint,2,opt"`
	Age      *int32  `protobuf:"varint,3,opt"`
	Nick     *string `protobuf:"bytes,4,opt"`
	Distance []byte  `protobuf:"bytes,5,opt"`
}

func (x *NewGroupUser) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *NewGroupUser) GetSex() int32 {
	if x != nil && x.Sex != nil {
		return *x.Sex
	}
	return 0
}

func (x *NewGroupUser) GetAge() int32 {
	if x != nil && x.Age != nil {
		return *x.Age
	}
	return 0
}

func (x *NewGroupUser) GetNick() string {
	if x != nil && x.Nick != nil {
		return *x.Nick
	}
	return ""
}

func (x *NewGroupUser) GetDistance() []byte {
	if x != nil {
		return x.Distance
	}
	return nil
}

type OneRoamPriv struct {
	Fuin      *uint64 `protobuf:"varint,1,opt"`
	PrivTag   *uint32 `protobuf:"varint,2,opt"`
	PrivValue *uint32 `protobuf:"varint,3,opt"`
}

func (x *OneRoamPriv) GetFuin() uint64 {
	if x != nil && x.Fuin != nil {
		return *x.Fuin
	}
	return 0
}

func (x *OneRoamPriv) GetPrivTag() uint32 {
	if x != nil && x.PrivTag != nil {
		return *x.PrivTag
	}
	return 0
}

func (x *OneRoamPriv) GetPrivValue() uint32 {
	if x != nil && x.PrivValue != nil {
		return *x.PrivValue
	}
	return 0
}

type PraiseRankNotify struct {
	IsChampion *uint32 `protobuf:"varint,11,opt"`
	RankNum    *uint32 `protobuf:"varint,12,opt"`
	Msg        *string `protobuf:"bytes,13,opt"`
}

func (x *PraiseRankNotify) GetIsChampion() uint32 {
	if x != nil && x.IsChampion != nil {
		return *x.IsChampion
	}
	return 0
}

func (x *PraiseRankNotify) GetRankNum() uint32 {
	if x != nil && x.RankNum != nil {
		return *x.RankNum
	}
	return 0
}

func (x *PraiseRankNotify) GetMsg() string {
	if x != nil && x.Msg != nil {
		return *x.Msg
	}
	return ""
}

type ProfileInfo struct {
	Field *uint32 `protobuf:"varint,1,opt"`
	Value []byte  `protobuf:"bytes,2,opt"`
}

func (x *ProfileInfo) GetField() uint32 {
	if x != nil && x.Field != nil {
		return *x.Field
	}
	return 0
}

func (x *ProfileInfo) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type PushReportDev struct {
	MsgType      *uint32 `protobuf:"varint,1,opt"`
	Cookie       []byte  `protobuf:"bytes,4,opt"`
	ReportMaxNum *uint32 `protobuf:"varint,5,opt"`
	Sn           []byte  `protobuf:"bytes,6,opt"`
}

func (x *PushReportDev) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *PushReportDev) GetCookie() []byte {
	if x != nil {
		return x.Cookie
	}
	return nil
}

func (x *PushReportDev) GetReportMaxNum() uint32 {
	if x != nil && x.ReportMaxNum != nil {
		return *x.ReportMaxNum
	}
	return 0
}

func (x *PushReportDev) GetSn() []byte {
	if x != nil {
		return x.Sn
	}
	return nil
}

type PushSearchDev struct {
	MsgType  *uint32 `protobuf:"varint,1,opt"`
	GpsInfo  *GPS    `protobuf:"bytes,2,opt"`
	DevTime  *uint32 `protobuf:"varint,3,opt"`
	PushTime *uint32 `protobuf:"varint,4,opt"`
	Din      *uint64 `protobuf:"varint,5,opt"`
	Data     *string `protobuf:"bytes,6,opt"`
}

func (x *PushSearchDev) GetMsgType() uint32 {
	if x != nil && x.MsgType != nil {
		return *x.MsgType
	}
	return 0
}

func (x *PushSearchDev) GetGpsInfo() *GPS {
	if x != nil {
		return x.GpsInfo
	}
	return nil
}

func (x *PushSearchDev) GetDevTime() uint32 {
	if x != nil && x.DevTime != nil {
		return *x.DevTime
	}
	return 0
}

func (x *PushSearchDev) GetPushTime() uint32 {
	if x != nil && x.PushTime != nil {
		return *x.PushTime
	}
	return 0
}

func (x *PushSearchDev) GetDin() uint64 {
	if x != nil && x.Din != nil {
		return *x.Din
	}
	return 0
}

func (x *PushSearchDev) GetData() string {
	if x != nil && x.Data != nil {
		return *x.Data
	}
	return ""
}

type QQPayPush struct {
	Uin   *uint64 `protobuf:"varint,1,opt"`
	PayOk *bool   `protobuf:"varint,2,opt"`
}

func (x *QQPayPush) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *QQPayPush) GetPayOk() bool {
	if x != nil && x.PayOk != nil {
		return *x.PayOk
	}
	return false
}

type SnsUpateBuffer struct {
	Uin           *uint64          `protobuf:"varint,1,opt"`
	Code          *uint64          `protobuf:"varint,2,opt"`
	Result        *uint32          `protobuf:"varint,3,opt"`
	SnsUpdateItem []*SnsUpdateItem `protobuf:"bytes,400,rep"`
	Idlist        []uint32         `protobuf:"varint,401,rep"`
}

func (x *SnsUpateBuffer) GetUin() uint64 {
	if x != nil && x.Uin != nil {
		return *x.Uin
	}
	return 0
}

func (x *SnsUpateBuffer) GetCode() uint64 {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return 0
}

func (x *SnsUpateBuffer) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *SnsUpateBuffer) GetSnsUpdateItem() []*SnsUpdateItem {
	if x != nil {
		return x.SnsUpdateItem
	}
	return nil
}

func (x *SnsUpateBuffer) GetIdlist() []uint32 {
	if x != nil {
		return x.Idlist
	}
	return nil
}

type SnsUpdateFlag struct {
	UpdateSnsFlag []*SnsUpdateOneFlag `protobuf:"bytes,1,rep"`
}

func (x *SnsUpdateFlag) GetUpdateSnsFlag() []*SnsUpdateOneFlag {
	if x != nil {
		return x.UpdateSnsFlag
	}
	return nil
}

type SnsUpdateItem struct {
	UpdateSnsType *uint32 `protobuf:"varint,1,opt"`
	Value         []byte  `protobuf:"bytes,2,opt"`
}

func (x *SnsUpdateItem) GetUpdateSnsType() uint32 {
	if x != nil && x.UpdateSnsType != nil {
		return *x.UpdateSnsType
	}
	return 0
}

func (x *SnsUpdateItem) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type SnsUpdateOneFlag struct {
	XUin *uint64 `protobuf:"varint,1,opt"`
	Id   *uint64 `protobuf:"varint,2,opt"`
	Flag *uint32 `protobuf:"varint,3,opt"`
}

func (x *SnsUpdateOneFlag) GetXUin() uint64 {
	if x != nil && x.XUin != nil {
		return *x.XUin
	}
	return 0
}

func (x *SnsUpdateOneFlag) GetId() uint64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *SnsUpdateOneFlag) GetFlag() uint32 {
	if x != nil && x.Flag != nil {
		return *x.Flag
	}
	return 0
}
