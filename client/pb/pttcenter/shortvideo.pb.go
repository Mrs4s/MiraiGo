// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: shortvideo.proto

package pttcenter

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ShortVideoReqBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd                      int32                     `protobuf:"varint,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Seq                      int32                     `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	PttShortVideoUploadReq   *ShortVideoUploadReq      `protobuf:"bytes,3,opt,name=pttShortVideoUploadReq,proto3" json:"pttShortVideoUploadReq,omitempty"`
	PttShortVideoDownloadReq *ShortVideoDownloadReq    `protobuf:"bytes,4,opt,name=pttShortVideoDownloadReq,proto3" json:"pttShortVideoDownloadReq,omitempty"`
	ExtensionReq             []*ShortVideoExtensionReq `protobuf:"bytes,100,rep,name=extensionReq,proto3" json:"extensionReq,omitempty"`
}

func (x *ShortVideoReqBody) Reset() {
	*x = ShortVideoReqBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortvideo_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoReqBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoReqBody) ProtoMessage() {}

func (x *ShortVideoReqBody) ProtoReflect() protoreflect.Message {
	mi := &file_shortvideo_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoReqBody.ProtoReflect.Descriptor instead.
func (*ShortVideoReqBody) Descriptor() ([]byte, []int) {
	return file_shortvideo_proto_rawDescGZIP(), []int{0}
}

func (x *ShortVideoReqBody) GetCmd() int32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *ShortVideoReqBody) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *ShortVideoReqBody) GetPttShortVideoUploadReq() *ShortVideoUploadReq {
	if x != nil {
		return x.PttShortVideoUploadReq
	}
	return nil
}

func (x *ShortVideoReqBody) GetPttShortVideoDownloadReq() *ShortVideoDownloadReq {
	if x != nil {
		return x.PttShortVideoDownloadReq
	}
	return nil
}

func (x *ShortVideoReqBody) GetExtensionReq() []*ShortVideoExtensionReq {
	if x != nil {
		return x.ExtensionReq
	}
	return nil
}

type ShortVideoRspBody struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cmd                      int32                  `protobuf:"varint,1,opt,name=cmd,proto3" json:"cmd,omitempty"`
	Seq                      int32                  `protobuf:"varint,2,opt,name=seq,proto3" json:"seq,omitempty"`
	PttShortVideoUploadRsp   *ShortVideoUploadRsp   `protobuf:"bytes,3,opt,name=pttShortVideoUploadRsp,proto3" json:"pttShortVideoUploadRsp,omitempty"`
	PttShortVideoDownloadRsp *ShortVideoDownloadRsp `protobuf:"bytes,4,opt,name=pttShortVideoDownloadRsp,proto3" json:"pttShortVideoDownloadRsp,omitempty"`
}

func (x *ShortVideoRspBody) Reset() {
	*x = ShortVideoRspBody{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortvideo_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoRspBody) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoRspBody) ProtoMessage() {}

func (x *ShortVideoRspBody) ProtoReflect() protoreflect.Message {
	mi := &file_shortvideo_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoRspBody.ProtoReflect.Descriptor instead.
func (*ShortVideoRspBody) Descriptor() ([]byte, []int) {
	return file_shortvideo_proto_rawDescGZIP(), []int{1}
}

func (x *ShortVideoRspBody) GetCmd() int32 {
	if x != nil {
		return x.Cmd
	}
	return 0
}

func (x *ShortVideoRspBody) GetSeq() int32 {
	if x != nil {
		return x.Seq
	}
	return 0
}

func (x *ShortVideoRspBody) GetPttShortVideoUploadRsp() *ShortVideoUploadRsp {
	if x != nil {
		return x.PttShortVideoUploadRsp
	}
	return nil
}

func (x *ShortVideoRspBody) GetPttShortVideoDownloadRsp() *ShortVideoDownloadRsp {
	if x != nil {
		return x.PttShortVideoDownloadRsp
	}
	return nil
}

type ShortVideoUploadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin          int64               `protobuf:"varint,1,opt,name=fromUin,proto3" json:"fromUin,omitempty"`
	ToUin            int64               `protobuf:"varint,2,opt,name=toUin,proto3" json:"toUin,omitempty"`
	ChatType         int32               `protobuf:"varint,3,opt,name=chatType,proto3" json:"chatType,omitempty"`
	ClientType       int32               `protobuf:"varint,4,opt,name=clientType,proto3" json:"clientType,omitempty"`
	Info             *ShortVideoFileInfo `protobuf:"bytes,5,opt,name=info,proto3" json:"info,omitempty"`
	GroupCode        int64               `protobuf:"varint,6,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	AgentType        int32               `protobuf:"varint,7,opt,name=agentType,proto3" json:"agentType,omitempty"`
	BusinessType     int32               `protobuf:"varint,8,opt,name=businessType,proto3" json:"businessType,omitempty"`
	SupportLargeSize int32               `protobuf:"varint,20,opt,name=supportLargeSize,proto3" json:"supportLargeSize,omitempty"`
}

func (x *ShortVideoUploadReq) Reset() {
	*x = ShortVideoUploadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortvideo_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoUploadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoUploadReq) ProtoMessage() {}

func (x *ShortVideoUploadReq) ProtoReflect() protoreflect.Message {
	mi := &file_shortvideo_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoUploadReq.ProtoReflect.Descriptor instead.
func (*ShortVideoUploadReq) Descriptor() ([]byte, []int) {
	return file_shortvideo_proto_rawDescGZIP(), []int{2}
}

func (x *ShortVideoUploadReq) GetFromUin() int64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *ShortVideoUploadReq) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *ShortVideoUploadReq) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *ShortVideoUploadReq) GetClientType() int32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ShortVideoUploadReq) GetInfo() *ShortVideoFileInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ShortVideoUploadReq) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *ShortVideoUploadReq) GetAgentType() int32 {
	if x != nil {
		return x.AgentType
	}
	return 0
}

func (x *ShortVideoUploadReq) GetBusinessType() int32 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *ShortVideoUploadReq) GetSupportLargeSize() int32 {
	if x != nil {
		return x.SupportLargeSize
	}
	return 0
}

type ShortVideoDownloadReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUin      int64  `protobuf:"varint,1,opt,name=fromUin,proto3" json:"fromUin,omitempty"`
	ToUin        int64  `protobuf:"varint,2,opt,name=toUin,proto3" json:"toUin,omitempty"`
	ChatType     int32  `protobuf:"varint,3,opt,name=chatType,proto3" json:"chatType,omitempty"`
	ClientType   int32  `protobuf:"varint,4,opt,name=clientType,proto3" json:"clientType,omitempty"`
	FileId       string `protobuf:"bytes,5,opt,name=fileId,proto3" json:"fileId,omitempty"`
	GroupCode    int64  `protobuf:"varint,6,opt,name=groupCode,proto3" json:"groupCode,omitempty"`
	AgentType    int32  `protobuf:"varint,7,opt,name=agentType,proto3" json:"agentType,omitempty"`
	FileMd5      []byte `protobuf:"bytes,8,opt,name=fileMd5,proto3" json:"fileMd5,omitempty"`
	BusinessType int32  `protobuf:"varint,9,opt,name=businessType,proto3" json:"businessType,omitempty"`
	FileType     int32  `protobuf:"varint,10,opt,name=fileType,proto3" json:"fileType,omitempty"`
	DownType     int32  `protobuf:"varint,11,opt,name=downType,proto3" json:"downType,omitempty"`
	SceneType    int32  `protobuf:"varint,12,opt,name=sceneType,proto3" json:"sceneType,omitempty"`
}

func (x *ShortVideoDownloadReq) Reset() {
	*x = ShortVideoDownloadReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortvideo_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoDownloadReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoDownloadReq) ProtoMessage() {}

func (x *ShortVideoDownloadReq) ProtoReflect() protoreflect.Message {
	mi := &file_shortvideo_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoDownloadReq.ProtoReflect.Descriptor instead.
func (*ShortVideoDownloadReq) Descriptor() ([]byte, []int) {
	return file_shortvideo_proto_rawDescGZIP(), []int{3}
}

func (x *ShortVideoDownloadReq) GetFromUin() int64 {
	if x != nil {
		return x.FromUin
	}
	return 0
}

func (x *ShortVideoDownloadReq) GetToUin() int64 {
	if x != nil {
		return x.ToUin
	}
	return 0
}

func (x *ShortVideoDownloadReq) GetChatType() int32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *ShortVideoDownloadReq) GetClientType() int32 {
	if x != nil {
		return x.ClientType
	}
	return 0
}

func (x *ShortVideoDownloadReq) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoDownloadReq) GetGroupCode() int64 {
	if x != nil {
		return x.GroupCode
	}
	return 0
}

func (x *ShortVideoDownloadReq) GetAgentType() int32 {
	if x != nil {
		return x.AgentType
	}
	return 0
}

func (x *ShortVideoDownloadReq) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *ShortVideoDownloadReq) GetBusinessType() int32 {
	if x != nil {
		return x.BusinessType
	}
	return 0
}

func (x *ShortVideoDownloadReq) GetFileType() int32 {
	if x != nil {
		return x.FileType
	}
	return 0
}

func (x *ShortVideoDownloadReq) GetDownType() int32 {
	if x != nil {
		return x.DownType
	}
	return 0
}

func (x *ShortVideoDownloadReq) GetSceneType() int32 {
	if x != nil {
		return x.SceneType
	}
	return 0
}

type ShortVideoDownloadRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode           int32               `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg            string              `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	SameAreaOutAddr   []*ShortVideoIpList `protobuf:"bytes,3,rep,name=sameAreaOutAddr,proto3" json:"sameAreaOutAddr,omitempty"`
	DiffAreaOutAddr   []*ShortVideoIpList `protobuf:"bytes,4,rep,name=diffAreaOutAddr,proto3" json:"diffAreaOutAddr,omitempty"`
	DownloadKey       []byte              `protobuf:"bytes,5,opt,name=downloadKey,proto3" json:"downloadKey,omitempty"`
	FileMd5           []byte              `protobuf:"bytes,6,opt,name=fileMd5,proto3" json:"fileMd5,omitempty"`
	SameAreaInnerAddr []*ShortVideoIpList `protobuf:"bytes,7,rep,name=sameAreaInnerAddr,proto3" json:"sameAreaInnerAddr,omitempty"`
	DiffAreaInnerAddr []*ShortVideoIpList `protobuf:"bytes,8,rep,name=diffAreaInnerAddr,proto3" json:"diffAreaInnerAddr,omitempty"`
	DownloadAddr      *ShortVideoAddr     `protobuf:"bytes,9,opt,name=downloadAddr,proto3" json:"downloadAddr,omitempty"`
	EncryptKey        []byte              `protobuf:"bytes,10,opt,name=encryptKey,proto3" json:"encryptKey,omitempty"`
}

func (x *ShortVideoDownloadRsp) Reset() {
	*x = ShortVideoDownloadRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortvideo_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoDownloadRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoDownloadRsp) ProtoMessage() {}

func (x *ShortVideoDownloadRsp) ProtoReflect() protoreflect.Message {
	mi := &file_shortvideo_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoDownloadRsp.ProtoReflect.Descriptor instead.
func (*ShortVideoDownloadRsp) Descriptor() ([]byte, []int) {
	return file_shortvideo_proto_rawDescGZIP(), []int{4}
}

func (x *ShortVideoDownloadRsp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *ShortVideoDownloadRsp) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *ShortVideoDownloadRsp) GetSameAreaOutAddr() []*ShortVideoIpList {
	if x != nil {
		return x.SameAreaOutAddr
	}
	return nil
}

func (x *ShortVideoDownloadRsp) GetDiffAreaOutAddr() []*ShortVideoIpList {
	if x != nil {
		return x.DiffAreaOutAddr
	}
	return nil
}

func (x *ShortVideoDownloadRsp) GetDownloadKey() []byte {
	if x != nil {
		return x.DownloadKey
	}
	return nil
}

func (x *ShortVideoDownloadRsp) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *ShortVideoDownloadRsp) GetSameAreaInnerAddr() []*ShortVideoIpList {
	if x != nil {
		return x.SameAreaInnerAddr
	}
	return nil
}

func (x *ShortVideoDownloadRsp) GetDiffAreaInnerAddr() []*ShortVideoIpList {
	if x != nil {
		return x.DiffAreaInnerAddr
	}
	return nil
}

func (x *ShortVideoDownloadRsp) GetDownloadAddr() *ShortVideoAddr {
	if x != nil {
		return x.DownloadAddr
	}
	return nil
}

func (x *ShortVideoDownloadRsp) GetEncryptKey() []byte {
	if x != nil {
		return x.EncryptKey
	}
	return nil
}

type ShortVideoUploadRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetCode           int32               `protobuf:"varint,1,opt,name=retCode,proto3" json:"retCode,omitempty"`
	RetMsg            string              `protobuf:"bytes,2,opt,name=retMsg,proto3" json:"retMsg,omitempty"`
	SameAreaOutAddr   []*ShortVideoIpList `protobuf:"bytes,3,rep,name=sameAreaOutAddr,proto3" json:"sameAreaOutAddr,omitempty"`
	DiffAreaOutAddr   []*ShortVideoIpList `protobuf:"bytes,4,rep,name=diffAreaOutAddr,proto3" json:"diffAreaOutAddr,omitempty"`
	FileId            string              `protobuf:"bytes,5,opt,name=fileId,proto3" json:"fileId,omitempty"`
	UKey              []byte              `protobuf:"bytes,6,opt,name=uKey,proto3" json:"uKey,omitempty"`
	FileExists        int32               `protobuf:"varint,7,opt,name=fileExists,proto3" json:"fileExists,omitempty"`
	SameAreaInnerAddr []*ShortVideoIpList `protobuf:"bytes,8,rep,name=sameAreaInnerAddr,proto3" json:"sameAreaInnerAddr,omitempty"`
	DiffAreaInnerAddr []*ShortVideoIpList `protobuf:"bytes,9,rep,name=diffAreaInnerAddr,proto3" json:"diffAreaInnerAddr,omitempty"`
	DataHole          []*DataHole         `protobuf:"bytes,10,rep,name=dataHole,proto3" json:"dataHole,omitempty"`
}

func (x *ShortVideoUploadRsp) Reset() {
	*x = ShortVideoUploadRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortvideo_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoUploadRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoUploadRsp) ProtoMessage() {}

func (x *ShortVideoUploadRsp) ProtoReflect() protoreflect.Message {
	mi := &file_shortvideo_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoUploadRsp.ProtoReflect.Descriptor instead.
func (*ShortVideoUploadRsp) Descriptor() ([]byte, []int) {
	return file_shortvideo_proto_rawDescGZIP(), []int{5}
}

func (x *ShortVideoUploadRsp) GetRetCode() int32 {
	if x != nil {
		return x.RetCode
	}
	return 0
}

func (x *ShortVideoUploadRsp) GetRetMsg() string {
	if x != nil {
		return x.RetMsg
	}
	return ""
}

func (x *ShortVideoUploadRsp) GetSameAreaOutAddr() []*ShortVideoIpList {
	if x != nil {
		return x.SameAreaOutAddr
	}
	return nil
}

func (x *ShortVideoUploadRsp) GetDiffAreaOutAddr() []*ShortVideoIpList {
	if x != nil {
		return x.DiffAreaOutAddr
	}
	return nil
}

func (x *ShortVideoUploadRsp) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *ShortVideoUploadRsp) GetUKey() []byte {
	if x != nil {
		return x.UKey
	}
	return nil
}

func (x *ShortVideoUploadRsp) GetFileExists() int32 {
	if x != nil {
		return x.FileExists
	}
	return 0
}

func (x *ShortVideoUploadRsp) GetSameAreaInnerAddr() []*ShortVideoIpList {
	if x != nil {
		return x.SameAreaInnerAddr
	}
	return nil
}

func (x *ShortVideoUploadRsp) GetDiffAreaInnerAddr() []*ShortVideoIpList {
	if x != nil {
		return x.DiffAreaInnerAddr
	}
	return nil
}

func (x *ShortVideoUploadRsp) GetDataHole() []*DataHole {
	if x != nil {
		return x.DataHole
	}
	return nil
}

type ShortVideoFileInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName      string `protobuf:"bytes,1,opt,name=fileName,proto3" json:"fileName,omitempty"`
	FileMd5       []byte `protobuf:"bytes,2,opt,name=fileMd5,proto3" json:"fileMd5,omitempty"`
	ThumbFileMd5  []byte `protobuf:"bytes,3,opt,name=thumbFileMd5,proto3" json:"thumbFileMd5,omitempty"`
	FileSize      int64  `protobuf:"varint,4,opt,name=fileSize,proto3" json:"fileSize,omitempty"`
	FileResLength int32  `protobuf:"varint,5,opt,name=fileResLength,proto3" json:"fileResLength,omitempty"`
	FileResWidth  int32  `protobuf:"varint,6,opt,name=fileResWidth,proto3" json:"fileResWidth,omitempty"`
	FileFormat    int32  `protobuf:"varint,7,opt,name=fileFormat,proto3" json:"fileFormat,omitempty"`
	FileTime      int32  `protobuf:"varint,8,opt,name=fileTime,proto3" json:"fileTime,omitempty"`
	ThumbFileSize int64  `protobuf:"varint,9,opt,name=thumbFileSize,proto3" json:"thumbFileSize,omitempty"`
}

func (x *ShortVideoFileInfo) Reset() {
	*x = ShortVideoFileInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortvideo_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoFileInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoFileInfo) ProtoMessage() {}

func (x *ShortVideoFileInfo) ProtoReflect() protoreflect.Message {
	mi := &file_shortvideo_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoFileInfo.ProtoReflect.Descriptor instead.
func (*ShortVideoFileInfo) Descriptor() ([]byte, []int) {
	return file_shortvideo_proto_rawDescGZIP(), []int{6}
}

func (x *ShortVideoFileInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ShortVideoFileInfo) GetFileMd5() []byte {
	if x != nil {
		return x.FileMd5
	}
	return nil
}

func (x *ShortVideoFileInfo) GetThumbFileMd5() []byte {
	if x != nil {
		return x.ThumbFileMd5
	}
	return nil
}

func (x *ShortVideoFileInfo) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *ShortVideoFileInfo) GetFileResLength() int32 {
	if x != nil {
		return x.FileResLength
	}
	return 0
}

func (x *ShortVideoFileInfo) GetFileResWidth() int32 {
	if x != nil {
		return x.FileResWidth
	}
	return 0
}

func (x *ShortVideoFileInfo) GetFileFormat() int32 {
	if x != nil {
		return x.FileFormat
	}
	return 0
}

func (x *ShortVideoFileInfo) GetFileTime() int32 {
	if x != nil {
		return x.FileTime
	}
	return 0
}

func (x *ShortVideoFileInfo) GetThumbFileSize() int64 {
	if x != nil {
		return x.ThumbFileSize
	}
	return 0
}

type DataHole struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Begin int64 `protobuf:"varint,1,opt,name=begin,proto3" json:"begin,omitempty"`
	End   int64 `protobuf:"varint,2,opt,name=end,proto3" json:"end,omitempty"`
}

func (x *DataHole) Reset() {
	*x = DataHole{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortvideo_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataHole) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataHole) ProtoMessage() {}

func (x *DataHole) ProtoReflect() protoreflect.Message {
	mi := &file_shortvideo_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataHole.ProtoReflect.Descriptor instead.
func (*DataHole) Descriptor() ([]byte, []int) {
	return file_shortvideo_proto_rawDescGZIP(), []int{7}
}

func (x *DataHole) GetBegin() int64 {
	if x != nil {
		return x.Begin
	}
	return 0
}

func (x *DataHole) GetEnd() int64 {
	if x != nil {
		return x.End
	}
	return 0
}

type ShortVideoIpList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip   int32 `protobuf:"varint,1,opt,name=ip,proto3" json:"ip,omitempty"`
	Port int32 `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *ShortVideoIpList) Reset() {
	*x = ShortVideoIpList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortvideo_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoIpList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoIpList) ProtoMessage() {}

func (x *ShortVideoIpList) ProtoReflect() protoreflect.Message {
	mi := &file_shortvideo_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoIpList.ProtoReflect.Descriptor instead.
func (*ShortVideoIpList) Descriptor() ([]byte, []int) {
	return file_shortvideo_proto_rawDescGZIP(), []int{8}
}

func (x *ShortVideoIpList) GetIp() int32 {
	if x != nil {
		return x.Ip
	}
	return 0
}

func (x *ShortVideoIpList) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type ShortVideoAddr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host    []string `protobuf:"bytes,10,rep,name=host,proto3" json:"host,omitempty"`
	UrlArgs string   `protobuf:"bytes,11,opt,name=urlArgs,proto3" json:"urlArgs,omitempty"` //repeated string domain = 13;
}

func (x *ShortVideoAddr) Reset() {
	*x = ShortVideoAddr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortvideo_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoAddr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoAddr) ProtoMessage() {}

func (x *ShortVideoAddr) ProtoReflect() protoreflect.Message {
	mi := &file_shortvideo_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoAddr.ProtoReflect.Descriptor instead.
func (*ShortVideoAddr) Descriptor() ([]byte, []int) {
	return file_shortvideo_proto_rawDescGZIP(), []int{9}
}

func (x *ShortVideoAddr) GetHost() []string {
	if x != nil {
		return x.Host
	}
	return nil
}

func (x *ShortVideoAddr) GetUrlArgs() string {
	if x != nil {
		return x.UrlArgs
	}
	return ""
}

type ShortVideoExtensionReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubBusiType int32 `protobuf:"varint,1,opt,name=subBusiType,proto3" json:"subBusiType,omitempty"`
	UserCnt     int32 `protobuf:"varint,2,opt,name=userCnt,proto3" json:"userCnt,omitempty"`
}

func (x *ShortVideoExtensionReq) Reset() {
	*x = ShortVideoExtensionReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shortvideo_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShortVideoExtensionReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortVideoExtensionReq) ProtoMessage() {}

func (x *ShortVideoExtensionReq) ProtoReflect() protoreflect.Message {
	mi := &file_shortvideo_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortVideoExtensionReq.ProtoReflect.Descriptor instead.
func (*ShortVideoExtensionReq) Descriptor() ([]byte, []int) {
	return file_shortvideo_proto_rawDescGZIP(), []int{10}
}

func (x *ShortVideoExtensionReq) GetSubBusiType() int32 {
	if x != nil {
		return x.SubBusiType
	}
	return 0
}

func (x *ShortVideoExtensionReq) GetUserCnt() int32 {
	if x != nil {
		return x.UserCnt
	}
	return 0
}

var File_shortvideo_proto protoreflect.FileDescriptor

var file_shortvideo_proto_rawDesc = []byte{
	0x0a, 0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x96, 0x02, 0x0a, 0x11, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x52, 0x65, 0x71, 0x42, 0x6f, 0x64, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x6d, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65,
	0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x4c, 0x0a, 0x16,
	0x70, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x52, 0x16, 0x70, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x52, 0x0a, 0x18, 0x70, 0x74,
	0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x52, 0x65, 0x71, 0x52, 0x18, 0x70, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x3b,
	0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x18, 0x64,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x52, 0x0c, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x22, 0xd9, 0x01, 0x0a, 0x11,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x73, 0x70, 0x42, 0x6f, 0x64,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x6d, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x63, 0x6d, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x4c, 0x0a, 0x16, 0x70, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x52, 0x16, 0x70, 0x74, 0x74,
	0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x73, 0x70, 0x12, 0x52, 0x0a, 0x18, 0x70, 0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x52, 0x18, 0x70,
	0x74, 0x74, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x22, 0xb6, 0x02, 0x0a, 0x13, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x55,
	0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c,
	0x61, 0x72, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x61, 0x72, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0xeb, 0x02, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72,
	0x6f, 0x6d, 0x55, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x66, 0x72, 0x6f,
	0x6d, 0x55, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x55, 0x69, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x63, 0x68,
	0x61, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69,
	0x6c, 0x65, 0x4d, 0x64, 0x35, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x4d, 0x64, 0x35, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69,
	0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x6f, 0x77, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xd6,
	0x03, 0x0a, 0x15, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x0f, 0x73, 0x61,
	0x6d, 0x65, 0x41, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x73, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x65, 0x61,
	0x4f, 0x75, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x3b, 0x0a, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x41,
	0x72, 0x65, 0x61, 0x4f, 0x75, 0x74, 0x41, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x41, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64,
	0x35, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35,
	0x12, 0x3f, 0x0a, 0x11, 0x73, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x6e, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x68,
	0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11,
	0x73, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x12, 0x3f, 0x0a, 0x11, 0x64, 0x69, 0x66, 0x66, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x6e,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53,
	0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x11, 0x64, 0x69, 0x66, 0x66, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x33, 0x0a, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x64,
	0x64, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x64, 0x64, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x4b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x65, 0x6e, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x4b, 0x65, 0x79, 0x22, 0xb6, 0x03, 0x0a, 0x13, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x73, 0x70, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x72, 0x65, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x74,
	0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x74, 0x4d, 0x73,
	0x67, 0x12, 0x3b, 0x0a, 0x0f, 0x73, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x73,
	0x61, 0x6d, 0x65, 0x41, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x3b,
	0x0a, 0x0f, 0x64, 0x69, 0x66, 0x66, 0x41, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0f, 0x64, 0x69, 0x66, 0x66,
	0x41, 0x72, 0x65, 0x61, 0x4f, 0x75, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x66,
	0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c,
	0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x4b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x04, 0x75, 0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x45,
	0x78, 0x69, 0x73, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x12, 0x3f, 0x0a, 0x11, 0x73, 0x61, 0x6d, 0x65, 0x41,
	0x72, 0x65, 0x61, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49,
	0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x73, 0x61, 0x6d, 0x65, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x3f, 0x0a, 0x11, 0x64, 0x69, 0x66, 0x66,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x11, 0x64, 0x69, 0x66, 0x66, 0x41, 0x72, 0x65, 0x61,
	0x49, 0x6e, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x25, 0x0a, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x48, 0x6f, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x48, 0x6f, 0x6c, 0x65, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x48, 0x6f, 0x6c, 0x65,
	0x22, 0xb6, 0x02, 0x0a, 0x12, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46,
	0x69, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x12, 0x22, 0x0a,
	0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x64, 0x35, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x64,
	0x35, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x4c, 0x65, 0x6e,
	0x67, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x46,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x66, 0x69, 0x6c,
	0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x68, 0x75, 0x6d, 0x62, 0x46, 0x69, 0x6c, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x68, 0x75, 0x6d,
	0x62, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x32, 0x0a, 0x08, 0x44, 0x61, 0x74,
	0x61, 0x48, 0x6f, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x36, 0x0a,
	0x10, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x70, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x22, 0x3e, 0x0a, 0x0e, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x41, 0x64, 0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x75,
	0x72, 0x6c, 0x41, 0x72, 0x67, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x72,
	0x6c, 0x41, 0x72, 0x67, 0x73, 0x22, 0x54, 0x0a, 0x16, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x75, 0x62, 0x42, 0x75, 0x73, 0x69, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x75, 0x62, 0x42, 0x75, 0x73, 0x69, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x43, 0x6e, 0x74, 0x42, 0x0d, 0x5a, 0x0b, 0x2e,
	0x3b, 0x70, 0x74, 0x74, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_shortvideo_proto_rawDescOnce sync.Once
	file_shortvideo_proto_rawDescData = file_shortvideo_proto_rawDesc
)

func file_shortvideo_proto_rawDescGZIP() []byte {
	file_shortvideo_proto_rawDescOnce.Do(func() {
		file_shortvideo_proto_rawDescData = protoimpl.X.CompressGZIP(file_shortvideo_proto_rawDescData)
	})
	return file_shortvideo_proto_rawDescData
}

var file_shortvideo_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_shortvideo_proto_goTypes = []interface{}{
	(*ShortVideoReqBody)(nil),      // 0: ShortVideoReqBody
	(*ShortVideoRspBody)(nil),      // 1: ShortVideoRspBody
	(*ShortVideoUploadReq)(nil),    // 2: ShortVideoUploadReq
	(*ShortVideoDownloadReq)(nil),  // 3: ShortVideoDownloadReq
	(*ShortVideoDownloadRsp)(nil),  // 4: ShortVideoDownloadRsp
	(*ShortVideoUploadRsp)(nil),    // 5: ShortVideoUploadRsp
	(*ShortVideoFileInfo)(nil),     // 6: ShortVideoFileInfo
	(*DataHole)(nil),               // 7: DataHole
	(*ShortVideoIpList)(nil),       // 8: ShortVideoIpList
	(*ShortVideoAddr)(nil),         // 9: ShortVideoAddr
	(*ShortVideoExtensionReq)(nil), // 10: ShortVideoExtensionReq
}
var file_shortvideo_proto_depIdxs = []int32{
	2,  // 0: ShortVideoReqBody.pttShortVideoUploadReq:type_name -> ShortVideoUploadReq
	3,  // 1: ShortVideoReqBody.pttShortVideoDownloadReq:type_name -> ShortVideoDownloadReq
	10, // 2: ShortVideoReqBody.extensionReq:type_name -> ShortVideoExtensionReq
	5,  // 3: ShortVideoRspBody.pttShortVideoUploadRsp:type_name -> ShortVideoUploadRsp
	4,  // 4: ShortVideoRspBody.pttShortVideoDownloadRsp:type_name -> ShortVideoDownloadRsp
	6,  // 5: ShortVideoUploadReq.info:type_name -> ShortVideoFileInfo
	8,  // 6: ShortVideoDownloadRsp.sameAreaOutAddr:type_name -> ShortVideoIpList
	8,  // 7: ShortVideoDownloadRsp.diffAreaOutAddr:type_name -> ShortVideoIpList
	8,  // 8: ShortVideoDownloadRsp.sameAreaInnerAddr:type_name -> ShortVideoIpList
	8,  // 9: ShortVideoDownloadRsp.diffAreaInnerAddr:type_name -> ShortVideoIpList
	9,  // 10: ShortVideoDownloadRsp.downloadAddr:type_name -> ShortVideoAddr
	8,  // 11: ShortVideoUploadRsp.sameAreaOutAddr:type_name -> ShortVideoIpList
	8,  // 12: ShortVideoUploadRsp.diffAreaOutAddr:type_name -> ShortVideoIpList
	8,  // 13: ShortVideoUploadRsp.sameAreaInnerAddr:type_name -> ShortVideoIpList
	8,  // 14: ShortVideoUploadRsp.diffAreaInnerAddr:type_name -> ShortVideoIpList
	7,  // 15: ShortVideoUploadRsp.dataHole:type_name -> DataHole
	16, // [16:16] is the sub-list for method output_type
	16, // [16:16] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_shortvideo_proto_init() }
func file_shortvideo_proto_init() {
	if File_shortvideo_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shortvideo_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoReqBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortvideo_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoRspBody); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortvideo_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoUploadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortvideo_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoDownloadReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortvideo_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoDownloadRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortvideo_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoUploadRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortvideo_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoFileInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortvideo_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataHole); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortvideo_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoIpList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortvideo_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoAddr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shortvideo_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShortVideoExtensionReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shortvideo_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_shortvideo_proto_goTypes,
		DependencyIndexes: file_shortvideo_proto_depIdxs,
		MessageInfos:      file_shortvideo_proto_msgTypes,
	}.Build()
	File_shortvideo_proto = out.File
	file_shortvideo_proto_rawDesc = nil
	file_shortvideo_proto_goTypes = nil
	file_shortvideo_proto_depIdxs = nil
}
