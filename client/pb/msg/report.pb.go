// Code generated by protoc-gen-golite. DO NOT EDIT.
// source: pb/msg/report.proto

package msg

type PbMsgReadedReportReq struct {
	GrpReadReport []*PbGroupReadedReportReq   `protobuf:"bytes,1,rep"`
	DisReadReport []*PbDiscussReadedReportReq `protobuf:"bytes,2,rep"`
	C2CReadReport *PbC2CReadedReportReq       `protobuf:"bytes,3,opt"` //optional PbBindUinMsgReadedConfirmReq bindUinReadReport = 4;
}

func (x *PbMsgReadedReportReq) GetGrpReadReport() []*PbGroupReadedReportReq {
	if x != nil {
		return x.GrpReadReport
	}
	return nil
}

func (x *PbMsgReadedReportReq) GetDisReadReport() []*PbDiscussReadedReportReq {
	if x != nil {
		return x.DisReadReport
	}
	return nil
}

func (x *PbMsgReadedReportReq) GetC2CReadReport() *PbC2CReadedReportReq {
	if x != nil {
		return x.C2CReadReport
	}
	return nil
}

type PbMsgReadedReportResp struct {
	GrpReadReport []*PbGroupReadedReportResp   `protobuf:"bytes,1,rep"`
	DisReadReport []*PbDiscussReadedReportResp `protobuf:"bytes,2,rep"`
	C2CReadReport *PbC2CReadedReportResp       `protobuf:"bytes,3,opt"` //optional PbBindUinMsgReadedConfirmResp bindUinReadReport = 4;
}

func (x *PbMsgReadedReportResp) GetGrpReadReport() []*PbGroupReadedReportResp {
	if x != nil {
		return x.GrpReadReport
	}
	return nil
}

func (x *PbMsgReadedReportResp) GetDisReadReport() []*PbDiscussReadedReportResp {
	if x != nil {
		return x.DisReadReport
	}
	return nil
}

func (x *PbMsgReadedReportResp) GetC2CReadReport() *PbC2CReadedReportResp {
	if x != nil {
		return x.C2CReadReport
	}
	return nil
}

type PbGroupReadedReportReq struct {
	GroupCode   *uint64 `protobuf:"varint,1,opt"`
	LastReadSeq *uint64 `protobuf:"varint,2,opt"`
}

func (x *PbGroupReadedReportReq) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *PbGroupReadedReportReq) GetLastReadSeq() uint64 {
	if x != nil && x.LastReadSeq != nil {
		return *x.LastReadSeq
	}
	return 0
}

type PbDiscussReadedReportReq struct {
	ConfUin     *uint64 `protobuf:"varint,1,opt"`
	LastReadSeq *uint64 `protobuf:"varint,2,opt"`
}

func (x *PbDiscussReadedReportReq) GetConfUin() uint64 {
	if x != nil && x.ConfUin != nil {
		return *x.ConfUin
	}
	return 0
}

func (x *PbDiscussReadedReportReq) GetLastReadSeq() uint64 {
	if x != nil && x.LastReadSeq != nil {
		return *x.LastReadSeq
	}
	return 0
}

type PbC2CReadedReportReq struct {
	SyncCookie []byte             `protobuf:"bytes,1,opt"`
	PairInfo   []*UinPairReadInfo `protobuf:"bytes,2,rep"`
}

func (x *PbC2CReadedReportReq) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}

func (x *PbC2CReadedReportReq) GetPairInfo() []*UinPairReadInfo {
	if x != nil {
		return x.PairInfo
	}
	return nil
}

type UinPairReadInfo struct {
	PeerUin      *uint64 `protobuf:"varint,1,opt"`
	LastReadTime *uint32 `protobuf:"varint,2,opt"`
	CrmSig       []byte  `protobuf:"bytes,3,opt"`
	PeerType     *uint32 `protobuf:"varint,4,opt"`
	ChatType     *uint32 `protobuf:"varint,5,opt"`
	Cpid         *uint64 `protobuf:"varint,6,opt"`
	AioType      *uint32 `protobuf:"varint,7,opt"`
	ToTinyId     *uint64 `protobuf:"varint,9,opt"`
}

func (x *UinPairReadInfo) GetPeerUin() uint64 {
	if x != nil && x.PeerUin != nil {
		return *x.PeerUin
	}
	return 0
}

func (x *UinPairReadInfo) GetLastReadTime() uint32 {
	if x != nil && x.LastReadTime != nil {
		return *x.LastReadTime
	}
	return 0
}

func (x *UinPairReadInfo) GetCrmSig() []byte {
	if x != nil {
		return x.CrmSig
	}
	return nil
}

func (x *UinPairReadInfo) GetPeerType() uint32 {
	if x != nil && x.PeerType != nil {
		return *x.PeerType
	}
	return 0
}

func (x *UinPairReadInfo) GetChatType() uint32 {
	if x != nil && x.ChatType != nil {
		return *x.ChatType
	}
	return 0
}

func (x *UinPairReadInfo) GetCpid() uint64 {
	if x != nil && x.Cpid != nil {
		return *x.Cpid
	}
	return 0
}

func (x *UinPairReadInfo) GetAioType() uint32 {
	if x != nil && x.AioType != nil {
		return *x.AioType
	}
	return 0
}

func (x *UinPairReadInfo) GetToTinyId() uint64 {
	if x != nil && x.ToTinyId != nil {
		return *x.ToTinyId
	}
	return 0
}

type PbGroupReadedReportResp struct {
	Result      *uint32 `protobuf:"varint,1,opt"`
	Errmsg      *string `protobuf:"bytes,2,opt"`
	GroupCode   *uint64 `protobuf:"varint,3,opt"`
	MemberSeq   *uint64 `protobuf:"varint,4,opt"`
	GroupMsgSeq *uint64 `protobuf:"varint,5,opt"`
}

func (x *PbGroupReadedReportResp) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *PbGroupReadedReportResp) GetErrmsg() string {
	if x != nil && x.Errmsg != nil {
		return *x.Errmsg
	}
	return ""
}

func (x *PbGroupReadedReportResp) GetGroupCode() uint64 {
	if x != nil && x.GroupCode != nil {
		return *x.GroupCode
	}
	return 0
}

func (x *PbGroupReadedReportResp) GetMemberSeq() uint64 {
	if x != nil && x.MemberSeq != nil {
		return *x.MemberSeq
	}
	return 0
}

func (x *PbGroupReadedReportResp) GetGroupMsgSeq() uint64 {
	if x != nil && x.GroupMsgSeq != nil {
		return *x.GroupMsgSeq
	}
	return 0
}

type PbDiscussReadedReportResp struct {
	Result    *uint32 `protobuf:"varint,1,opt"`
	Errmsg    *string `protobuf:"bytes,2,opt"`
	ConfUin   *uint64 `protobuf:"varint,3,opt"`
	MemberSeq *uint64 `protobuf:"varint,4,opt"`
	ConfSeq   *uint64 `protobuf:"varint,5,opt"`
}

func (x *PbDiscussReadedReportResp) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *PbDiscussReadedReportResp) GetErrmsg() string {
	if x != nil && x.Errmsg != nil {
		return *x.Errmsg
	}
	return ""
}

func (x *PbDiscussReadedReportResp) GetConfUin() uint64 {
	if x != nil && x.ConfUin != nil {
		return *x.ConfUin
	}
	return 0
}

func (x *PbDiscussReadedReportResp) GetMemberSeq() uint64 {
	if x != nil && x.MemberSeq != nil {
		return *x.MemberSeq
	}
	return 0
}

func (x *PbDiscussReadedReportResp) GetConfSeq() uint64 {
	if x != nil && x.ConfSeq != nil {
		return *x.ConfSeq
	}
	return 0
}

type PbC2CReadedReportResp struct {
	Result     *uint32 `protobuf:"varint,1,opt"`
	Errmsg     *string `protobuf:"bytes,2,opt"`
	SyncCookie []byte  `protobuf:"bytes,3,opt"`
}

func (x *PbC2CReadedReportResp) GetResult() uint32 {
	if x != nil && x.Result != nil {
		return *x.Result
	}
	return 0
}

func (x *PbC2CReadedReportResp) GetErrmsg() string {
	if x != nil && x.Errmsg != nil {
		return *x.Errmsg
	}
	return ""
}

func (x *PbC2CReadedReportResp) GetSyncCookie() []byte {
	if x != nil {
		return x.SyncCookie
	}
	return nil
}
